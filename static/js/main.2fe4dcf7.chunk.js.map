{"version":3,"sources":["components/Game/useGameReducer.js","sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","engine/checks.js","engine/actions.js","engine/clearLines.js","components/Game/reducer.js","components/Game/Game.js","engine/tetrominoes.js","components/Game/index.js","sfx/audio.js","engine/randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["audio","randomizer","landed","tetromino","playfield","height","length","shape","some","row","y","occupied","x","top","left","returnOriginalIfInvalid","updatedTetromino","originalTetromino","width","isPositionValid","rotateRight","map","_","directions","directionOffset","move","direction","merge","hardDrop","result","emptyLines","Array","phases","doLock","state","lockResult","locked","lock","undefined","ghostPiece","sfx","phase","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","every","concat","linesCleared","clearLines","lines","interval","Math","max","floor","rotateLeft","spawn","queue","newTetromino","newQueue","slice","isAlive","alive","start","countdown","originalPhase","pause","resume","restore","validPhases","reducer","type","includes","initialState","Game","customHook","getTetrominoBlock","className","data-testid","block","onClick","i","keyActionMappings","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Escape","F1","z","Control","o","O","name","I","s","S","Z","t","T","j","J","l","L","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Audio","GameFactory","xs","randomIndex","random","temp","shuffle","useReducer","dispatch","shouldTick","useEffect","handle","setInterval","clearInterval","phaseVisitors","setTimeout","onKeydown","e","key","preventDefault","document","body","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fe4dcf7.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\n\r\nimport { directions } from '../../engine/actions';\r\nimport { initialState, phases, reducer } from './reducer';\r\nimport { useEffect, useReducer } from 'react';\r\n\r\nconst keyActionMappings = {\r\n  ArrowLeft: { type: 'move', payload: directions.left },\r\n  ArrowRight: { type: 'move', payload: directions.right },\r\n  ArrowDown: { type: 'move', payload: directions.down },\r\n  ArrowUp: { type: 'rotateRight' },\r\n  x: { type: 'rotateRight' },\r\n  ' ': { type: 'hardDrop' },\r\n  Escape: { type: 'pause' },\r\n  F1: { type: 'pause' },\r\n  z: { type: 'rotateLeft' },\r\n  Control: { type: 'rotateLeft' }\r\n};\r\nexport const UseGameReducer = (audio, randomizer) => () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const shouldTick =\r\n    state.alive &&\r\n    state.tetromino !== undefined &&\r\n    state.phase !== phases.paused;\r\n  useEffect(() => {\r\n    const handle = shouldTick\r\n      ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\r\n      : 0;\r\n    return () => clearInterval(handle);\r\n  }, [shouldTick, state.interval]);\r\n\r\n  useEffect(() => {\r\n    if (state.sfx) {\r\n      audio[state.sfx]();\r\n    }\r\n  }, [state.sfx]);\r\n  useEffect(() => {\r\n    const phaseVisitors = {\r\n      [phases.spawning]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'spawn',\r\n              payload: state.queue.length <= 3 ? randomizer() : []\r\n            }),\r\n          500\r\n        ),\r\n      [phases.locking]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'lock'\r\n            }),\r\n          500\r\n        ),\r\n      [phases.clearing]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'clear'\r\n            }),\r\n          500\r\n        ),\r\n      [phases.starting]: () => {\r\n        if (state.countdown > 0) {\r\n          setTimeout(\r\n            () =>\r\n              dispatch({\r\n                type: 'countdown'\r\n              }),\r\n            1000\r\n          );\r\n        } else {\r\n          dispatch({\r\n            type: 'spawn',\r\n            payload: randomizer()\r\n          });\r\n        }\r\n      },\r\n      [phases.resuming]: () => {\r\n        if (state.countdown > 0) {\r\n          setTimeout(\r\n            () =>\r\n              dispatch({\r\n                type: 'countdown'\r\n              }),\r\n            1000\r\n          );\r\n        } else {\r\n          dispatch({\r\n            type: 'restore'\r\n          });\r\n        }\r\n      }\r\n    };\r\n    phaseVisitors[state.phase]?.();\r\n  }, [state.phase, state.queue.length, state.countdown]);\r\n  useEffect(() => {\r\n    const onKeydown = (e) => {\r\n      if (keyActionMappings[e.key]) {\r\n        dispatch(keyActionMappings[e.key]);\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    if (state.alive) {\r\n      document.body.addEventListener('keydown', onKeydown);\r\n    }\r\n    return () => document.body.removeEventListener('keydown', onKeydown);\r\n  }, [state.alive]);\r\n\r\n  const start = () => dispatch({ type: 'start', payload: randomizer() });\r\n  const resume = () => dispatch({ type: 'resume' });\r\n  return {\r\n    state,\r\n    start,\r\n    resume\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\n\nexport const alive = (tetromino, playfield) =>\n  !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied && playfield[y + tetromino.top][x + tetromino.left]\n    )\n  );\n","import { landed } from './checks';\nconst isPositionValid = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n\nconst returnOriginalIfInvalid = (\n  updatedTetromino,\n  originalTetromino,\n  playfield\n) =>\n  isPositionValid(updatedTetromino, playfield)\n    ? updatedTetromino\n    : originalTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield\n  );\n\nexport const directions = {\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nconst directionOffset = {\n  [directions.left]: {\n    left: -1,\n    top: 0\n  },\n  [directions.right]: {\n    left: 1,\n    top: 0\n  },\n  [directions.down]: {\n    left: 0,\n    top: 1\n  }\n};\n\nexport const move = (tetromino, playfield, direction) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","import { alive, landed } from '../../engine/checks';\r\nimport {\r\n  directions,\r\n  hardDrop,\r\n  lock,\r\n  move,\r\n  rotateLeft,\r\n  rotateRight\r\n} from '../../engine/actions';\r\n\r\nimport { clearLines } from '../../engine/clearLines';\r\n\r\nexport const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver',\r\n  starting: 'starting',\r\n  pending: 'pending',\r\n  paused: 'paused',\r\n  resuming: 'resuming'\r\n};\r\n\r\nconst doLock = (state) => {\r\n  const { tetromino, playfield } = state;\r\n  const lockResult = lock(tetromino, playfield);\r\n  return lockResult.locked\r\n    ? {\r\n        ...state,\r\n        tetromino: undefined,\r\n        ghostPiece: undefined,\r\n        playfield: lockResult.playfield,\r\n        sfx: 'locked',\r\n        phase: phases.clearing\r\n      }\r\n    : {\r\n        ...state,\r\n        phase: phases.descending\r\n      };\r\n};\r\n\r\nconst visitors = {\r\n  tick: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, directions.down);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      phase: landed(updatedTetromino, playfield) ? phases.locking : state.phase\r\n    };\r\n  },\r\n  move: (state, action) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, action.payload);\r\n    return state.phase === phases.locking && action.payload === directions.down\r\n      ? doLock(state)\r\n      : {\r\n          ...state,\r\n          tetromino: updatedTetromino,\r\n          ghostPiece: hardDrop(updatedTetromino, playfield),\r\n          phase: landed(updatedTetromino, playfield)\r\n            ? phases.locking\r\n            : phases.descending\r\n        };\r\n  },\r\n  lock: doLock,\r\n  clear: (state) => {\r\n    const { playfield } = state;\r\n    const clearResult = clearLines(playfield);\r\n    const lines = state.lines + clearResult.linesCleared;\r\n    return {\r\n      ...state,\r\n      playfield: clearResult.playfield,\r\n      lines,\r\n      sfx:\r\n        clearResult.linesCleared > 0\r\n          ? 'clear' + clearResult.linesCleared\r\n          : undefined,\r\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\r\n      phase: phases.spawning\r\n    };\r\n  },\r\n  rotateRight: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateRight(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: rotateRight(tetromino, playfield),\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  rotateLeft: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateLeft(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  spawn: (state, action) => {\r\n    const { queue, playfield } = state;\r\n    const newTetromino = queue[0];\r\n    const newQueue = queue.slice(1).concat(action.payload || []);\r\n    const isAlive = alive(newTetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: newTetromino,\r\n      ghostPiece: hardDrop(newTetromino, playfield),\r\n      phase: isAlive ? phases.descending : phases.gameOver,\r\n      sfx: isAlive ? 'spawn' : 'gameOver',\r\n      queue: newQueue,\r\n      alive: isAlive\r\n    };\r\n  },\r\n  hardDrop: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = hardDrop(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      sfx: 'hardDrop',\r\n      phase: phases.locking\r\n    };\r\n  },\r\n  start: (state, action) => ({\r\n    playfield: [...Array(20)].map(() => [...Array(10)].map(() => undefined)),\r\n    queue: action.payload,\r\n    phase: phases.starting,\r\n    tetromino: undefined,\r\n    alive: true,\r\n    interval: 1000,\r\n    lines: 0,\r\n    countdown: 3,\r\n    originalPhase: undefined\r\n  }),\r\n  countdown: (state) => ({\r\n    ...state,\r\n    countdown: Math.max(0, state.countdown - 1)\r\n  }),\r\n  pause: (state) => ({\r\n    ...state,\r\n    phase: phases.paused,\r\n    originalPhase: state.phase\r\n  }),\r\n  resume: (state) => ({\r\n    ...state,\r\n    phase: phases.resuming,\r\n    countdown: 3\r\n  }),\r\n  restore: (state) => ({\r\n    ...state,\r\n    phase: state.originalPhase,\r\n    originalPhase: undefined\r\n  })\r\n};\r\nconst validPhases = {\r\n  tick: [phases.descending],\r\n  move: [phases.descending, phases.locking],\r\n  lock: [phases.locking],\r\n  clear: [phases.clearing],\r\n  rotateLeft: [phases.descending, phases.locking],\r\n  rotateRight: [phases.descending, phases.locking],\r\n  spawn: [phases.spawning, phases.starting],\r\n  hardDrop: [phases.descending],\r\n  start: [phases.pending, phases.gameOver],\r\n  countdown: [phases.starting, phases.resuming],\r\n  pause: [phases.descending, phases.locking, phases.clearing, phases.spawning],\r\n  resume: [phases.paused],\r\n  restore: [phases.resuming]\r\n};\r\nexport const reducer = (state, action) =>\r\n  validPhases[action.type]?.includes(state.phase)\r\n    ? visitors[action.type](state, action)\r\n    : state;\r\n\r\nexport const initialState = {\r\n  playfield: [...Array(20)].map(() => [...Array(10)].map(() => undefined)),\r\n  queue: [],\r\n  phase: phases.pending,\r\n  tetromino: undefined,\r\n  alive: false,\r\n  interval: 1000,\r\n  lines: 0,\r\n  countdown: 0\r\n};\r\n","import React from 'react';\r\nimport { phases } from './reducer';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state, start, resume } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n  return (\r\n    <>\r\n      <main className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {state.phase === phases.pending || state.phase === phases.gameOver ? (\r\n          <div className=\"controls\">\r\n            <button onClick={start}>PLAY</button>\r\n          </div>\r\n        ) : null}\r\n        {state.phase === phases.paused ? (\r\n          <div className=\"controls\">\r\n            <button onClick={resume}>RESUME</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {state.countdown > 0 ? (\r\n          <div className=\"countdown\">{state.countdown}</div>\r\n        ) : null}\r\n      </main>\r\n      <div className=\"frame\">\r\n        <h1>NEXT</h1>\r\n        <div className=\"next-tetrominoes\">\r\n          {state.queue.slice(0, 3).map((tetromino, i) => (\r\n            <div className=\"next-tetromino\" key={i}>\r\n              {tetromino.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h1>LINES</h1>\r\n        <div className=\"lines\">{state.lines}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","//https://tetris.fandom.com/wiki/SRS\r\nconst _ = undefined;\r\nconst o = 'O';\r\nexport const O = {\r\n  top: 0,\r\n  left: 4,\r\n  name: o,\r\n  shape: [\r\n    [o, o],\r\n    [o, o]\r\n  ]\r\n};\r\nconst i = 'I';\r\nexport const I = {\r\n  top: 0,\r\n  left: 3,\r\n  name: i,\r\n  shape: [\r\n    [_, _, _, _],\r\n    [i, i, i, i],\r\n    [_, _, _, _],\r\n    [_, _, _, _]\r\n  ]\r\n};\r\nconst s = 'S';\r\nexport const S = {\r\n  top: 0,\r\n  left: 3,\r\n  name: s,\r\n  shape: [\r\n    [_, s, s],\r\n    [s, s, _],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst z = 'Z';\r\nexport const Z = {\r\n  top: 0,\r\n  left: 3,\r\n  name: z,\r\n  shape: [\r\n    [z, z, _],\r\n    [_, z, z],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst t = 'T';\r\nexport const T = {\r\n  top: 0,\r\n  left: 3,\r\n  name: t,\r\n  shape: [\r\n    [_, t, _],\r\n    [t, t, t],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst j = 'J';\r\nexport const J = {\r\n  top: 0,\r\n  left: 3,\r\n  name: j,\r\n  shape: [\r\n    [j, _, _],\r\n    [j, j, j],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst l = 'L';\r\nexport const L = {\r\n  top: 0,\r\n  left: 3,\r\n  name: l,\r\n  shape: [\r\n    [_, _, l],\r\n    [l, l, l],\r\n    [_, _, _]\r\n  ]\r\n};\r\n","import { Audio } from '../../sfx/audio';\r\nimport GameFactory from './Game';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Audio(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Audio = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","import { I, J, L, O, S, T, Z } from './tetrominoes';\r\n\r\nconst shuffle = (xs) => {\r\n  const result = xs.slice(0);\r\n  let i = result.slice(0).length - 1;\r\n  while (i >= 0) {\r\n    const randomIndex = Math.floor(Math.random() * (i + 1));\r\n    const temp = result[i];\r\n    result[i] = result[randomIndex];\r\n    result[randomIndex] = temp;\r\n    i = i - 1;\r\n  }\r\n  return result;\r\n};\r\nexport const randomizer = () => shuffle([I, O, T, S, Z, J, L]);\r\n","import './App.scss';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}