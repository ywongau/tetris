{"version":3,"sources":["sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","sfx/audio.js","constants/phases.js","components/Game/Game.js","constants/directions.js","engine/checks.js","engine/actions.js","engine/clearLines.js","components/Game/reducer.js","components/Game/useGameReducer.js","constants/tetrominos.js","components/Game/index.js","engine/randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["phases","Game","customHook","state","start","resume","getTetrominoBlock","tetromino","x","y","shape","top","left","className","data-testid","playfield","map","row","phase","every","block","ghostPiece","onClick","countdown","queue","slice","i","lines","directions","directionOffset","landed","height","length","some","occupied","returnOriginalIfInvalid","updatedTetromino","originalTetromino","width","isPositionValid","rotateRight","_","move","direction","merge","hardDrop","result","emptyLines","Array","emptyPlayField","doLock","lockResult","locked","lock","undefined","sfx","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","concat","linesCleared","clearLines","interval","Math","max","floor","rotateLeft","spawn","newTetromino","newQueue","isAlive","blockOut","alive","originalPhase","pause","restore","validPhases","reducer","type","includes","initialState","keyActionMappings","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Escape","F1","z","Control","o","O","name","I","s","S","Z","t","T","j","J","l","L","audio","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Audio","randomizer","GameFactory","xs","randomIndex","random","temp","shuffle","dispatch","useReducer","shouldTick","useEffect","handle","setInterval","clearInterval","phaseVisitors","setTimeout","onKeydown","e","key","preventDefault","document","body","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ea34e84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Audio = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","export const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver',\r\n  starting: 'starting',\r\n  pending: 'pending',\r\n  paused: 'paused',\r\n  resuming: 'resuming'\r\n};\r\n","import React from 'react';\r\nimport { phases } from '../../constants/phases';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state, start, resume } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n  return (\r\n    <>\r\n      <main className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {state.phase === phases.pending || state.phase === phases.gameOver ? (\r\n          <div className=\"controls\">\r\n            <button onClick={start}>PLAY</button>\r\n          </div>\r\n        ) : null}\r\n        {state.phase === phases.paused ? (\r\n          <div className=\"controls\">\r\n            <button onClick={resume}>RESUME</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {state.countdown > 0 ? (\r\n          <div className=\"countdown\">{state.countdown}</div>\r\n        ) : null}\r\n      </main>\r\n      <div className=\"frame\">\r\n        <h1>NEXT</h1>\r\n        <div className=\"next-tetrominos\">\r\n          {state.queue.slice(0, 3).map((tetromino, i) => (\r\n            <div className=\"next-tetromino\" key={i}>\r\n              {tetromino.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h1>LINES</h1>\r\n        <div className=\"lines\">{state.lines}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export const directions = {\r\n  left: 37,\r\n  right: 39,\r\n  down: 40\r\n};\r\nexport const directionOffset = {\r\n  [directions.left]: {\r\n    left: -1,\r\n    top: 0\r\n  },\r\n  [directions.right]: {\r\n    left: 1,\r\n    top: 0\r\n  },\r\n  [directions.down]: {\r\n    left: 0,\r\n    top: 1\r\n  }\r\n};\r\n","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\nexport const blockOut = (tetromino, playfield) =>\n  tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied && playfield[y + tetromino.top][x + tetromino.left]\n    )\n  );\n","import { landed } from './checks';\nimport { directionOffset } from '../constants/directions';\nconst isPositionValid = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n\nconst returnOriginalIfInvalid = (\n  updatedTetromino,\n  originalTetromino,\n  playfield\n) =>\n  isPositionValid(updatedTetromino, playfield)\n    ? updatedTetromino\n    : originalTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield\n  );\n\nexport const move = (tetromino, playfield, direction) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","import { blockOut, landed } from '../../engine/checks';\nimport {\n  hardDrop,\n  lock,\n  move,\n  rotateLeft,\n  rotateRight\n} from '../../engine/actions';\n\nimport { clearLines } from '../../engine/clearLines';\nimport { directions } from '../../constants/directions';\nimport { phases } from '../../constants/phases';\n\nconst emptyPlayField = [...Array(22)].map(() =>\n  [...Array(10)].map(() => undefined)\n);\nconst doLock = (state) => {\n  const { tetromino, playfield } = state;\n  const lockResult = lock(tetromino, playfield);\n  return lockResult.locked\n    ? {\n        ...state,\n        tetromino: undefined,\n        ghostPiece: undefined,\n        playfield: lockResult.playfield,\n        sfx: 'locked',\n        phase: phases.clearing\n      }\n    : {\n        ...state,\n        phase: phases.descending\n      };\n};\n\nconst visitors = {\n  tick: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, directions.down);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      phase: landed(updatedTetromino, playfield) ? phases.locking : state.phase\n    };\n  },\n  move: (state, action) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, action.payload);\n    return state.phase === phases.locking && action.payload === directions.down\n      ? doLock(state)\n      : {\n          ...state,\n          tetromino: updatedTetromino,\n          ghostPiece: hardDrop(updatedTetromino, playfield),\n          phase: landed(updatedTetromino, playfield)\n            ? phases.locking\n            : phases.descending\n        };\n  },\n  lock: doLock,\n  clear: (state) => {\n    const { playfield } = state;\n    const clearResult = clearLines(playfield);\n    const lines = state.lines + clearResult.linesCleared;\n    return {\n      ...state,\n      playfield: clearResult.playfield,\n      lines,\n      sfx:\n        clearResult.linesCleared > 0\n          ? 'clear' + clearResult.linesCleared\n          : undefined,\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\n      phase: phases.spawning\n    };\n  },\n  rotateRight: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateRight(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: rotateRight(tetromino, playfield),\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  rotateLeft: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateLeft(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  spawn: (state, action) => {\n    const { queue, playfield } = state;\n    const newTetromino = queue[0];\n    const newQueue = queue.slice(1).concat(action.payload || []);\n    const isAlive =\n      !landed(newTetromino, playfield) && !blockOut(newTetromino, playfield);\n    return {\n      ...state,\n      tetromino: newTetromino,\n      ghostPiece: hardDrop(newTetromino, playfield),\n      phase: isAlive ? phases.descending : phases.gameOver,\n      sfx: isAlive ? 'spawn' : 'gameOver',\n      queue: newQueue,\n      alive: isAlive\n    };\n  },\n  hardDrop: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = hardDrop(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      sfx: 'hardDrop',\n      phase: phases.locking\n    };\n  },\n  start: (state, action) => ({\n    playfield: emptyPlayField,\n    queue: action.payload,\n    phase: phases.starting,\n    tetromino: undefined,\n    alive: true,\n    interval: 1000,\n    lines: 0,\n    countdown: 3,\n    originalPhase: undefined\n  }),\n  countdown: (state) => ({\n    ...state,\n    countdown: Math.max(0, state.countdown - 1)\n  }),\n  pause: (state) => ({\n    ...state,\n    phase: phases.paused,\n    originalPhase: state.phase\n  }),\n  resume: (state) => ({\n    ...state,\n    phase: phases.resuming,\n    countdown: 3\n  }),\n  restore: (state) => ({\n    ...state,\n    phase: state.originalPhase,\n    originalPhase: undefined\n  })\n};\nconst validPhases = {\n  tick: [phases.descending],\n  move: [phases.descending, phases.locking],\n  lock: [phases.locking],\n  clear: [phases.clearing],\n  rotateLeft: [phases.descending, phases.locking],\n  rotateRight: [phases.descending, phases.locking],\n  spawn: [phases.spawning, phases.starting],\n  hardDrop: [phases.descending],\n  start: [phases.pending, phases.gameOver],\n  countdown: [phases.starting, phases.resuming],\n  pause: [phases.descending, phases.locking, phases.clearing, phases.spawning],\n  resume: [phases.paused],\n  restore: [phases.resuming]\n};\nexport const reducer = (state, action) =>\n  validPhases[action.type]?.includes(state.phase)\n    ? visitors[action.type](state, action)\n    : state;\n\nexport const initialState = {\n  playfield: emptyPlayField,\n  queue: [],\n  phase: phases.pending,\n  tetromino: undefined,\n  alive: false,\n  interval: 1000,\n  lines: 0,\n  countdown: 0\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport { directions } from '../../constants/directions';\nimport { phases } from '../../constants/phases';\nimport { initialState, reducer } from './reducer';\nimport { useEffect, useReducer } from 'react';\n\nconst keyActionMappings = {\n  ArrowLeft: { type: 'move', payload: directions.left },\n  ArrowRight: { type: 'move', payload: directions.right },\n  ArrowDown: { type: 'move', payload: directions.down },\n  ArrowUp: { type: 'rotateRight' },\n  x: { type: 'rotateRight' },\n  ' ': { type: 'hardDrop' },\n  Escape: { type: 'pause' },\n  F1: { type: 'pause' },\n  z: { type: 'rotateLeft' },\n  Control: { type: 'rotateLeft' }\n};\nexport const UseGameReducer = (audio, randomizer) => () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const shouldTick =\n    state.alive &&\n    state.tetromino !== undefined &&\n    state.phase !== phases.paused;\n  useEffect(() => {\n    const handle = shouldTick\n      ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\n      : 0;\n    return () => clearInterval(handle);\n  }, [shouldTick, state.interval]);\n\n  useEffect(() => {\n    if (state.sfx) {\n      audio[state.sfx]();\n    }\n  }, [state.sfx]);\n  useEffect(() => {\n    const phaseVisitors = {\n      [phases.spawning]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'spawn',\n              payload: state.queue.length <= 3 ? randomizer() : []\n            }),\n          500\n        ),\n      [phases.locking]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'lock'\n            }),\n          500\n        ),\n      [phases.clearing]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'clear'\n            }),\n          500\n        ),\n      [phases.starting]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'spawn',\n            payload: randomizer()\n          });\n        }\n      },\n      [phases.resuming]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'restore'\n          });\n        }\n      }\n    };\n    phaseVisitors[state.phase]?.();\n  }, [state.phase, state.queue.length, state.countdown]);\n  useEffect(() => {\n    const onKeydown = (e) => {\n      if (keyActionMappings[e.key]) {\n        dispatch(keyActionMappings[e.key]);\n        e.preventDefault();\n      }\n    };\n    if (state.alive) {\n      document.body.addEventListener('keydown', onKeydown);\n    }\n    return () => document.body.removeEventListener('keydown', onKeydown);\n  }, [state.alive]);\n\n  const start = () => dispatch({ type: 'start', payload: randomizer() });\n  const resume = () => dispatch({ type: 'resume' });\n  return {\n    state,\n    start,\n    resume\n  };\n};\n","//https://tetris.fandom.com/wiki/SRS\nconst _ = undefined;\nconst o = 'O';\nexport const O = {\n  top: 0,\n  left: 4,\n  name: o,\n  shape: [\n    [o, o],\n    [o, o]\n  ]\n};\nconst i = 'I';\nexport const I = {\n  top: 0,\n  left: 3,\n  name: i,\n  shape: [\n    [_, _, _, _],\n    [i, i, i, i],\n    [_, _, _, _],\n    [_, _, _, _]\n  ]\n};\nconst s = 'S';\nexport const S = {\n  top: 0,\n  left: 3,\n  name: s,\n  shape: [\n    [_, s, s],\n    [s, s, _],\n    [_, _, _]\n  ]\n};\nconst z = 'Z';\nexport const Z = {\n  top: 0,\n  left: 3,\n  name: z,\n  shape: [\n    [z, z, _],\n    [_, z, z],\n    [_, _, _]\n  ]\n};\nconst t = 'T';\nexport const T = {\n  top: 0,\n  left: 3,\n  name: t,\n  shape: [\n    [_, t, _],\n    [t, t, t],\n    [_, _, _]\n  ]\n};\n\nconst j = 'J';\nexport const J = {\n  top: 0,\n  left: 3,\n  name: j,\n  shape: [\n    [j, _, _],\n    [j, j, j],\n    [_, _, _]\n  ]\n};\n\nconst l = 'L';\nexport const L = {\n  top: 0,\n  left: 3,\n  name: l,\n  shape: [\n    [_, _, l],\n    [l, l, l],\n    [_, _, _]\n  ]\n};\n","import { Audio } from '../../sfx/audio';\r\nimport GameFactory from './Game';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Audio(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import { I, J, L, O, S, T, Z } from '../constants/tetrominos';\r\n\r\nconst shuffle = (xs) => {\r\n  const result = xs.slice(0);\r\n  let i = result.slice(0).length - 1;\r\n  while (i >= 0) {\r\n    const randomIndex = Math.floor(Math.random() * (i + 1));\r\n    const temp = result[i];\r\n    result[i] = result[randomIndex];\r\n    result[randomIndex] = temp;\r\n    i = i - 1;\r\n  }\r\n  return result;\r\n};\r\nexport const randomizer = () => shuffle([I, O, T, S, Z, J, L]);\r\n","import './App.scss';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}