{"version":3,"sources":["components/Game/useGameReducer.js","sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","constants/phases.js","components/Game/Game.js","constants/directions.js","engine/checks.js","engine/actions.js","engine/clearLines.js","components/Game/reducer.js","constants/tetrominos.js","components/Game/index.js","sfx/audio.js","engine/randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["audio","randomizer","phases","Game","customHook","state","start","resume","getTetrominoBlock","tetromino","x","y","shape","top","left","className","data-testid","playfield","map","row","phase","every","block","ghostPiece","onClick","countdown","queue","slice","i","lines","directions","directionOffset","landed","height","length","some","occupied","returnOriginalIfInvalid","updatedTetromino","originalTetromino","width","isPositionValid","rotateRight","_","move","direction","merge","hardDrop","result","emptyLines","Array","doLock","lockResult","locked","lock","undefined","sfx","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","concat","linesCleared","clearLines","interval","Math","max","floor","rotateLeft","spawn","newTetromino","newQueue","isAlive","alive","originalPhase","pause","restore","validPhases","reducer","type","includes","initialState","keyActionMappings","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Escape","F1","z","Control","o","O","name","I","s","S","Z","t","T","j","J","l","L","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Audio","GameFactory","xs","randomIndex","random","temp","shuffle","useReducer","dispatch","shouldTick","useEffect","handle","setInterval","clearInterval","phaseVisitors","setTimeout","onKeydown","e","key","preventDefault","document","body","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcdad7c5.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\n\r\nimport { directions } from '../../constants/directions';\r\nimport { phases } from '../../constants/phases';\r\nimport { initialState, reducer } from './reducer';\r\nimport { useEffect, useReducer } from 'react';\r\n\r\nconst keyActionMappings = {\r\n  ArrowLeft: { type: 'move', payload: directions.left },\r\n  ArrowRight: { type: 'move', payload: directions.right },\r\n  ArrowDown: { type: 'move', payload: directions.down },\r\n  ArrowUp: { type: 'rotateRight' },\r\n  x: { type: 'rotateRight' },\r\n  ' ': { type: 'hardDrop' },\r\n  Escape: { type: 'pause' },\r\n  F1: { type: 'pause' },\r\n  z: { type: 'rotateLeft' },\r\n  Control: { type: 'rotateLeft' }\r\n};\r\nexport const UseGameReducer = (audio, randomizer) => () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const shouldTick =\r\n    state.alive &&\r\n    state.tetromino !== undefined &&\r\n    state.phase !== phases.paused;\r\n  useEffect(() => {\r\n    const handle = shouldTick\r\n      ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\r\n      : 0;\r\n    return () => clearInterval(handle);\r\n  }, [shouldTick, state.interval]);\r\n\r\n  useEffect(() => {\r\n    if (state.sfx) {\r\n      audio[state.sfx]();\r\n    }\r\n  }, [state.sfx]);\r\n  useEffect(() => {\r\n    const phaseVisitors = {\r\n      [phases.spawning]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'spawn',\r\n              payload: state.queue.length <= 3 ? randomizer() : []\r\n            }),\r\n          500\r\n        ),\r\n      [phases.locking]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'lock'\r\n            }),\r\n          500\r\n        ),\r\n      [phases.clearing]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'clear'\r\n            }),\r\n          500\r\n        ),\r\n      [phases.starting]: () => {\r\n        if (state.countdown > 0) {\r\n          setTimeout(\r\n            () =>\r\n              dispatch({\r\n                type: 'countdown'\r\n              }),\r\n            1000\r\n          );\r\n        } else {\r\n          dispatch({\r\n            type: 'spawn',\r\n            payload: randomizer()\r\n          });\r\n        }\r\n      },\r\n      [phases.resuming]: () => {\r\n        if (state.countdown > 0) {\r\n          setTimeout(\r\n            () =>\r\n              dispatch({\r\n                type: 'countdown'\r\n              }),\r\n            1000\r\n          );\r\n        } else {\r\n          dispatch({\r\n            type: 'restore'\r\n          });\r\n        }\r\n      }\r\n    };\r\n    phaseVisitors[state.phase]?.();\r\n  }, [state.phase, state.queue.length, state.countdown]);\r\n  useEffect(() => {\r\n    const onKeydown = (e) => {\r\n      if (keyActionMappings[e.key]) {\r\n        dispatch(keyActionMappings[e.key]);\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    if (state.alive) {\r\n      document.body.addEventListener('keydown', onKeydown);\r\n    }\r\n    return () => document.body.removeEventListener('keydown', onKeydown);\r\n  }, [state.alive]);\r\n\r\n  const start = () => dispatch({ type: 'start', payload: randomizer() });\r\n  const resume = () => dispatch({ type: 'resume' });\r\n  return {\r\n    state,\r\n    start,\r\n    resume\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","export const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver',\r\n  starting: 'starting',\r\n  pending: 'pending',\r\n  paused: 'paused',\r\n  resuming: 'resuming'\r\n};\r\n","import React from 'react';\r\nimport { phases } from '../../constants/phases';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state, start, resume } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n  return (\r\n    <>\r\n      <main className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {state.phase === phases.pending || state.phase === phases.gameOver ? (\r\n          <div className=\"controls\">\r\n            <button onClick={start}>PLAY</button>\r\n          </div>\r\n        ) : null}\r\n        {state.phase === phases.paused ? (\r\n          <div className=\"controls\">\r\n            <button onClick={resume}>RESUME</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {state.countdown > 0 ? (\r\n          <div className=\"countdown\">{state.countdown}</div>\r\n        ) : null}\r\n      </main>\r\n      <div className=\"frame\">\r\n        <h1>NEXT</h1>\r\n        <div className=\"next-tetrominos\">\r\n          {state.queue.slice(0, 3).map((tetromino, i) => (\r\n            <div className=\"next-tetromino\" key={i}>\r\n              {tetromino.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h1>LINES</h1>\r\n        <div className=\"lines\">{state.lines}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export const directions = {\r\n  left: 37,\r\n  right: 39,\r\n  down: 40\r\n};\r\nexport const directionOffset = {\r\n  [directions.left]: {\r\n    left: -1,\r\n    top: 0\r\n  },\r\n  [directions.right]: {\r\n    left: 1,\r\n    top: 0\r\n  },\r\n  [directions.down]: {\r\n    left: 0,\r\n    top: 1\r\n  }\r\n};\r\n","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\n\nexport const alive = (tetromino, playfield) =>\n  !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied && playfield[y + tetromino.top][x + tetromino.left]\n    )\n  );\n","import { landed } from './checks';\nimport { directionOffset } from '../constants/directions';\nconst isPositionValid = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n\nconst returnOriginalIfInvalid = (\n  updatedTetromino,\n  originalTetromino,\n  playfield\n) =>\n  isPositionValid(updatedTetromino, playfield)\n    ? updatedTetromino\n    : originalTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield\n  );\n\nexport const move = (tetromino, playfield, direction) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","import { directions } from '../../constants/directions';\r\nimport { phases } from '../../constants/phases';\r\nimport { alive, landed } from '../../engine/checks';\r\nimport {\r\n  hardDrop,\r\n  lock,\r\n  move,\r\n  rotateLeft,\r\n  rotateRight\r\n} from '../../engine/actions';\r\n\r\nimport { clearLines } from '../../engine/clearLines';\r\n\r\nconst doLock = (state) => {\r\n  const { tetromino, playfield } = state;\r\n  const lockResult = lock(tetromino, playfield);\r\n  return lockResult.locked\r\n    ? {\r\n        ...state,\r\n        tetromino: undefined,\r\n        ghostPiece: undefined,\r\n        playfield: lockResult.playfield,\r\n        sfx: 'locked',\r\n        phase: phases.clearing\r\n      }\r\n    : {\r\n        ...state,\r\n        phase: phases.descending\r\n      };\r\n};\r\n\r\nconst visitors = {\r\n  tick: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, directions.down);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      phase: landed(updatedTetromino, playfield) ? phases.locking : state.phase\r\n    };\r\n  },\r\n  move: (state, action) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, action.payload);\r\n    return state.phase === phases.locking && action.payload === directions.down\r\n      ? doLock(state)\r\n      : {\r\n          ...state,\r\n          tetromino: updatedTetromino,\r\n          ghostPiece: hardDrop(updatedTetromino, playfield),\r\n          phase: landed(updatedTetromino, playfield)\r\n            ? phases.locking\r\n            : phases.descending\r\n        };\r\n  },\r\n  lock: doLock,\r\n  clear: (state) => {\r\n    const { playfield } = state;\r\n    const clearResult = clearLines(playfield);\r\n    const lines = state.lines + clearResult.linesCleared;\r\n    return {\r\n      ...state,\r\n      playfield: clearResult.playfield,\r\n      lines,\r\n      sfx:\r\n        clearResult.linesCleared > 0\r\n          ? 'clear' + clearResult.linesCleared\r\n          : undefined,\r\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\r\n      phase: phases.spawning\r\n    };\r\n  },\r\n  rotateRight: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateRight(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: rotateRight(tetromino, playfield),\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  rotateLeft: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateLeft(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  spawn: (state, action) => {\r\n    const { queue, playfield } = state;\r\n    const newTetromino = queue[0];\r\n    const newQueue = queue.slice(1).concat(action.payload || []);\r\n    const isAlive = alive(newTetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: newTetromino,\r\n      ghostPiece: hardDrop(newTetromino, playfield),\r\n      phase: isAlive ? phases.descending : phases.gameOver,\r\n      sfx: isAlive ? 'spawn' : 'gameOver',\r\n      queue: newQueue,\r\n      alive: isAlive\r\n    };\r\n  },\r\n  hardDrop: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = hardDrop(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      sfx: 'hardDrop',\r\n      phase: phases.locking\r\n    };\r\n  },\r\n  start: (state, action) => ({\r\n    playfield: [...Array(20)].map(() => [...Array(10)].map(() => undefined)),\r\n    queue: action.payload,\r\n    phase: phases.starting,\r\n    tetromino: undefined,\r\n    alive: true,\r\n    interval: 1000,\r\n    lines: 0,\r\n    countdown: 3,\r\n    originalPhase: undefined\r\n  }),\r\n  countdown: (state) => ({\r\n    ...state,\r\n    countdown: Math.max(0, state.countdown - 1)\r\n  }),\r\n  pause: (state) => ({\r\n    ...state,\r\n    phase: phases.paused,\r\n    originalPhase: state.phase\r\n  }),\r\n  resume: (state) => ({\r\n    ...state,\r\n    phase: phases.resuming,\r\n    countdown: 3\r\n  }),\r\n  restore: (state) => ({\r\n    ...state,\r\n    phase: state.originalPhase,\r\n    originalPhase: undefined\r\n  })\r\n};\r\nconst validPhases = {\r\n  tick: [phases.descending],\r\n  move: [phases.descending, phases.locking],\r\n  lock: [phases.locking],\r\n  clear: [phases.clearing],\r\n  rotateLeft: [phases.descending, phases.locking],\r\n  rotateRight: [phases.descending, phases.locking],\r\n  spawn: [phases.spawning, phases.starting],\r\n  hardDrop: [phases.descending],\r\n  start: [phases.pending, phases.gameOver],\r\n  countdown: [phases.starting, phases.resuming],\r\n  pause: [phases.descending, phases.locking, phases.clearing, phases.spawning],\r\n  resume: [phases.paused],\r\n  restore: [phases.resuming]\r\n};\r\nexport const reducer = (state, action) =>\r\n  validPhases[action.type]?.includes(state.phase)\r\n    ? visitors[action.type](state, action)\r\n    : state;\r\n\r\nexport const initialState = {\r\n  playfield: [...Array(20)].map(() => [...Array(10)].map(() => undefined)),\r\n  queue: [],\r\n  phase: phases.pending,\r\n  tetromino: undefined,\r\n  alive: false,\r\n  interval: 1000,\r\n  lines: 0,\r\n  countdown: 0\r\n};\r\n","//https://tetris.fandom.com/wiki/SRS\r\nconst _ = undefined;\r\nconst o = 'O';\r\nexport const O = {\r\n  top: 0,\r\n  left: 4,\r\n  name: o,\r\n  shape: [\r\n    [o, o],\r\n    [o, o]\r\n  ]\r\n};\r\nconst i = 'I';\r\nexport const I = {\r\n  top: 0,\r\n  left: 3,\r\n  name: i,\r\n  shape: [\r\n    [_, _, _, _],\r\n    [i, i, i, i],\r\n    [_, _, _, _],\r\n    [_, _, _, _]\r\n  ]\r\n};\r\nconst s = 'S';\r\nexport const S = {\r\n  top: 0,\r\n  left: 3,\r\n  name: s,\r\n  shape: [\r\n    [_, s, s],\r\n    [s, s, _],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst z = 'Z';\r\nexport const Z = {\r\n  top: 0,\r\n  left: 3,\r\n  name: z,\r\n  shape: [\r\n    [z, z, _],\r\n    [_, z, z],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst t = 'T';\r\nexport const T = {\r\n  top: 0,\r\n  left: 3,\r\n  name: t,\r\n  shape: [\r\n    [_, t, _],\r\n    [t, t, t],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst j = 'J';\r\nexport const J = {\r\n  top: 0,\r\n  left: 3,\r\n  name: j,\r\n  shape: [\r\n    [j, _, _],\r\n    [j, j, j],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst l = 'L';\r\nexport const L = {\r\n  top: 0,\r\n  left: 3,\r\n  name: l,\r\n  shape: [\r\n    [_, _, l],\r\n    [l, l, l],\r\n    [_, _, _]\r\n  ]\r\n};\r\n","import { Audio } from '../../sfx/audio';\r\nimport GameFactory from './Game';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Audio(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Audio = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","import { I, J, L, O, S, T, Z } from '../constants/tetrominos';\r\n\r\nconst shuffle = (xs) => {\r\n  const result = xs.slice(0);\r\n  let i = result.slice(0).length - 1;\r\n  while (i >= 0) {\r\n    const randomIndex = Math.floor(Math.random() * (i + 1));\r\n    const temp = result[i];\r\n    result[i] = result[randomIndex];\r\n    result[randomIndex] = temp;\r\n    i = i - 1;\r\n  }\r\n  return result;\r\n};\r\nexport const randomizer = () => shuffle([I, O, T, S, Z, J, L]);\r\n","import './App.scss';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}