{"version":3,"sources":["components/Game/useGameReducer.js","sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","components/Game/Game.js","engine/checks.js","engine/actions.js","engine/clearLines.js","components/Game/reducer.js","engine/tetrominoes.js","engine/randomizer.js","components/Game/index.js","sfx/audio.js","App.js","reportWebVitals.js","index.js"],"names":["audio","randomizer","Game","customHook","state","getTetrominoBlock","tetromino","x","y","shape","top","left","className","data-testid","playfield","map","row","phase","every","block","ghostPiece","queue","slice","i","lines","landed","height","length","some","occupied","returnOriginalIfInvalid","updatedTetromino","originalTetromino","width","isPositionValid","rotateRight","_","directions","directionOffset","move","direction","merge","hardDrop","result","emptyLines","Array","phases","doLock","lockResult","locked","lock","undefined","sfx","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","concat","linesCleared","clearLines","interval","Math","max","floor","rotateLeft","spawn","newTetromino","newQueue","isAlive","alive","validPhases","reducer","type","includes","keyMappings","ArrowLeft","ArrowRight","ArrowDown","o","s","z","t","j","l","tetrominoes","name","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","start","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Audio","GameFactory","xs","randomIndex","random","temp","shuffle","useReducer","score","dispatch","useEffect","handle","setInterval","clearInterval","phaseVisitors","setTimeout","onKeydown","e","key","document","body","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a2ac9c8.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\n\r\nimport { directions, hardDrop } from '../../engine/actions';\r\nimport { phases, reducer } from './reducer';\r\nimport { useEffect, useReducer } from 'react';\r\n\r\nconst keyMappings = {\r\n  ArrowLeft: directions.left,\r\n  ArrowRight: directions.right,\r\n  ArrowDown: directions.down\r\n};\r\nexport const UseGameReducer = (audio, randomizer) => () => {\r\n  const queue = randomizer();\r\n  const tetromino = queue[0];\r\n  const playfield = [...Array(20)].map(() =>\r\n    [...Array(10)].map(() => undefined)\r\n  );\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    playfield,\r\n    queue: queue.slice(1),\r\n    phase: phases.descending,\r\n    tetromino,\r\n    alive: true,\r\n    score: 0,\r\n    lines: 0,\r\n    interval: 1000,\r\n    ghostPiece: hardDrop(tetromino, playfield)\r\n  });\r\n  useEffect(() => {\r\n    const handle =\r\n      state.alive && state.tetromino\r\n        ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\r\n        : 0;\r\n    return () => clearInterval(handle);\r\n  }, [state.alive, state.tetromino, state.interval]);\r\n  useEffect(() => {\r\n    if (state.sfx) {\r\n      audio[state.sfx]();\r\n    }\r\n  }, [state.sfx]);\r\n  useEffect(() => {\r\n    const phaseVisitors = {\r\n      [phases.spawning]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'spawn',\r\n              payload: state.queue.length <= 3 ? randomizer() : []\r\n            }),\r\n          500\r\n        ),\r\n      [phases.locking]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'lock'\r\n            }),\r\n          500\r\n        ),\r\n      [phases.clearing]: () =>\r\n        setTimeout(\r\n          () =>\r\n            dispatch({\r\n              type: 'clear'\r\n            }),\r\n          500\r\n        )\r\n    };\r\n    phaseVisitors[state.phase]?.();\r\n  }, [state.phase, state.queue.length]);\r\n  useEffect(() => {\r\n    const onKeydown = (e) => {\r\n      if (keyMappings[e.key]) {\r\n        dispatch({ type: 'move', payload: keyMappings[e.key] });\r\n      }\r\n      if (e.key === 'ArrowUp') {\r\n        dispatch({ type: 'rotateRight' });\r\n      }\r\n      if (e.key === ' ') {\r\n        dispatch({ type: 'hardDrop' });\r\n      }\r\n    };\r\n    if (state.alive) {\r\n      document.body.addEventListener('keydown', onKeydown);\r\n    }\r\n    return () => document.body.removeEventListener('keydown', onKeydown);\r\n  }, [state.alive]);\r\n  return {\r\n    state\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","import React from 'react';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"frame\">\r\n        <h1>NEXT</h1>\r\n        <div className=\"next-tetrominoes\">\r\n          {state.queue.slice(0, 3).map((tetromino, i) => (\r\n            <div className=\"next-tetromino\" key={i}>\r\n              {tetromino.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h1>LINES</h1>\r\n        <div className=\"lines\">{state.lines}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\n\nexport const alive = (tetromino, playfield) =>\n  !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied && playfield[y + tetromino.top][x + tetromino.left]\n    )\n  );\n","import { landed } from './checks';\nconst isPositionValid = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return !tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n\nconst returnOriginalIfInvalid = (\n  updatedTetromino,\n  originalTetromino,\n  playfield\n) =>\n  isPositionValid(updatedTetromino, playfield)\n    ? updatedTetromino\n    : originalTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield\n  );\n\nexport const directions = {\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nconst directionOffset = {\n  [directions.left]: {\n    left: -1,\n    top: 0\n  },\n  [directions.right]: {\n    left: 1,\n    top: 0\n  },\n  [directions.down]: {\n    left: 0,\n    top: 1\n  }\n};\n\nexport const move = (tetromino, playfield, direction) =>\n  returnOriginalIfInvalid(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","import { alive, landed } from '../../engine/checks';\r\nimport {\r\n  directions,\r\n  hardDrop,\r\n  lock,\r\n  move,\r\n  rotateLeft,\r\n  rotateRight\r\n} from '../../engine/actions';\r\n\r\nimport { clearLines } from '../../engine/clearLines';\r\n\r\nexport const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver'\r\n};\r\n\r\nconst doLock = (state) => {\r\n  const { tetromino, playfield } = state;\r\n  const lockResult = lock(tetromino, playfield);\r\n  return lockResult.locked\r\n    ? {\r\n        ...state,\r\n        tetromino: undefined,\r\n        ghostPiece: undefined,\r\n        playfield: lockResult.playfield,\r\n        sfx: 'locked',\r\n        phase: phases.clearing\r\n      }\r\n    : {\r\n        ...state,\r\n        phase: phases.descending\r\n      };\r\n};\r\n\r\nconst visitors = {\r\n  tick: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, directions.down);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      phase: landed(updatedTetromino, playfield)\r\n        ? phases.locking\r\n        : phases.descending\r\n    };\r\n  },\r\n  move: (state, action) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = move(tetromino, playfield, action.payload);\r\n    return state.phase === phases.locking && action.payload === directions.down\r\n      ? doLock(state)\r\n      : {\r\n          ...state,\r\n          tetromino: updatedTetromino,\r\n          ghostPiece: hardDrop(updatedTetromino, playfield),\r\n          phase: landed(updatedTetromino, playfield)\r\n            ? phases.locking\r\n            : phases.descending\r\n        };\r\n  },\r\n  lock: doLock,\r\n  clear: (state) => {\r\n    const { playfield } = state;\r\n    const clearResult = clearLines(playfield);\r\n    const lines = state.lines + clearResult.linesCleared;\r\n    return {\r\n      ...state,\r\n      playfield: clearResult.playfield,\r\n      lines,\r\n      sfx:\r\n        clearResult.linesCleared > 0\r\n          ? 'clear' + clearResult.linesCleared\r\n          : undefined,\r\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\r\n      phase: phases.spawning\r\n    };\r\n  },\r\n  rotateRight: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateRight(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: rotateRight(tetromino, playfield),\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  rotateLeft: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = rotateLeft(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      ghostPiece: hardDrop(updatedTetromino, playfield)\r\n    };\r\n  },\r\n  spawn: (state, action) => {\r\n    const { queue, playfield } = state;\r\n    const newTetromino = queue[0];\r\n    const newQueue = queue.slice(1).concat(action.payload || []);\r\n    const isAlive = alive(newTetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: newTetromino,\r\n      ghostPiece: hardDrop(newTetromino, playfield),\r\n      phase: isAlive ? phases.descending : phases.gameOver,\r\n      sfx: isAlive ? 'spawn' : 'gameOver',\r\n      queue: newQueue,\r\n      alive: isAlive\r\n    };\r\n  },\r\n  hardDrop: (state) => {\r\n    const { tetromino, playfield } = state;\r\n    const updatedTetromino = hardDrop(tetromino, playfield);\r\n    return {\r\n      ...state,\r\n      tetromino: updatedTetromino,\r\n      sfx: 'hardDrop',\r\n      phase: phases.locking\r\n    };\r\n  }\r\n};\r\nconst validPhases = {\r\n  tick: [phases.descending],\r\n  move: [phases.descending, phases.locking],\r\n  lock: [phases.locking],\r\n  clear: [phases.clearing],\r\n  rotateLeft: [phases.descending, phases.locking],\r\n  rotateRight: [phases.descending, phases.locking],\r\n  spawn: [phases.spawning],\r\n  hardDrop: [phases.descending]\r\n};\r\nexport const reducer = (state, action) =>\r\n  validPhases[action.type]?.includes(state.phase)\r\n    ? visitors[action.type](state, action)\r\n    : state;\r\n","//https://tetris.fandom.com/wiki/SRS\r\nconst _ = undefined;\r\nconst o = 'O';\r\nexport const O = {\r\n  top: 0,\r\n  left: 4,\r\n  name: o,\r\n  shape: [\r\n    [o, o],\r\n    [o, o]\r\n  ]\r\n};\r\nconst i = 'I';\r\nexport const I = {\r\n  top: 0,\r\n  left: 3,\r\n  name: i,\r\n  shape: [\r\n    [_, _, _, _],\r\n    [i, i, i, i],\r\n    [_, _, _, _],\r\n    [_, _, _, _]\r\n  ]\r\n};\r\nconst s = 'S';\r\nexport const S = {\r\n  top: 0,\r\n  left: 3,\r\n  name: s,\r\n  shape: [\r\n    [_, s, s],\r\n    [s, s, _],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst z = 'Z';\r\nexport const Z = {\r\n  top: 0,\r\n  left: 3,\r\n  name: z,\r\n  shape: [\r\n    [z, z, _],\r\n    [_, z, z],\r\n    [_, _, _]\r\n  ]\r\n};\r\nconst t = 'T';\r\nexport const T = {\r\n  top: 0,\r\n  left: 3,\r\n  name: t,\r\n  shape: [\r\n    [_, t, _],\r\n    [t, t, t],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst j = 'J';\r\nexport const J = {\r\n  top: 0,\r\n  left: 3,\r\n  name: j,\r\n  shape: [\r\n    [j, _, _],\r\n    [j, j, j],\r\n    [_, _, _]\r\n  ]\r\n};\r\n\r\nconst l = 'L';\r\nexport const L = {\r\n  top: 0,\r\n  left: 3,\r\n  name: l,\r\n  shape: [\r\n    [_, _, l],\r\n    [l, l, l],\r\n    [_, _, _]\r\n  ]\r\n};\r\n","import { I, J, L, O, S, T, Z } from './tetrominoes';\r\n\r\nconst shuffle = (xs) => {\r\n  const result = xs.slice(0);\r\n  let i = result.slice(0).length - 1;\r\n  while (i >= 0) {\r\n    const randomIndex = Math.floor(Math.random() * (i + 1));\r\n    const temp = result[i];\r\n    result[i] = result[randomIndex];\r\n    result[randomIndex] = temp;\r\n    i = i - 1;\r\n  }\r\n  return result;\r\n};\r\nconst tetrominoes = [I, O, T, S, Z, J, L];\r\n\r\nexport const randomizer = () => shuffle(tetrominoes);\r\n","import { Audio } from '../../sfx/audio';\r\nimport GameFactory from './Game';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Audio(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Audio = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","import './App.css';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}