{"version":3,"sources":["constants/phases.js","components/Game/Game.js","sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","sfx/player.js","constants/directions.js","engine/checks.js","constants/wallKickData.js","engine/actions.js","engine/clearLines.js","components/Game/reducer.js","components/Game/useGameReducer.js","constants/tetrominos.js","components/Game/index.js","engine/randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["phases","Game","customHook","state","start","resume","getTetrominoBlock","tetromino","x","y","shape","top","left","className","data-testid","playfield","map","row","phase","every","block","ghostPiece","onClick","countdown","queue","slice","i","lines","directions","directionOffset","landed","height","length","some","occupied","blockedOut","width","othersRight","othersLeft","iRight","o","I","O","L","J","Z","S","T","right","wallKick","wallKickData","wallKicked","tryRotate","originalTetromino","rotateRight","rotationPhase","_","name","move","direction","updatedTetromino","tryMove","merge","hardDrop","result","emptyLines","Array","emptyPlayField","doLock","lockResult","locked","lock","undefined","sfx","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","concat","linesCleared","clearLines","interval","Math","max","floor","rotateLeft","spawn","newTetromino","newQueue","isAlive","alive","originalPhase","pause","restore","validPhases","reducer","type","includes","initialState","keyActionMappings","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Escape","F1","z","Control","s","t","j","l","audio","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Player","randomizer","GameFactory","xs","randomIndex","random","temp","shuffle","dispatch","useReducer","shouldTick","useEffect","handle","setInterval","clearInterval","phaseVisitors","setTimeout","onKeydown","e","key","preventDefault","document","body","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cc29acd.chunk.js","sourcesContent":["export const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver',\r\n  starting: 'starting',\r\n  pending: 'pending',\r\n  paused: 'paused',\r\n  resuming: 'resuming'\r\n};\r\n","import React from 'react';\r\nimport { phases } from '../../constants/phases';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state, start, resume } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n  return (\r\n    <>\r\n      <main className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {state.phase === phases.pending || state.phase === phases.gameOver ? (\r\n          <div className=\"controls\">\r\n            <button onClick={start}>START</button>\r\n          </div>\r\n        ) : null}\r\n        {state.phase === phases.paused ? (\r\n          <div className=\"controls\">\r\n            <button onClick={resume}>RESUME</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {state.countdown > 0 ? (\r\n          <div className=\"countdown\">{state.countdown}</div>\r\n        ) : null}\r\n      </main>\r\n      <div className=\"frame\">\r\n        <h1>NEXT</h1>\r\n        <div className=\"next-tetrominos\">\r\n          {state.queue.slice(0, 3).map((tetromino, i) => (\r\n            <div className=\"next-tetromino\" key={i}>\r\n              {tetromino.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <h1>LINES</h1>\r\n        <div className=\"lines\">{state.lines}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Player = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","export const directions = {\r\n  left: 37,\r\n  right: 39,\r\n  down: 40\r\n};\r\nexport const directionOffset = {\r\n  [directions.left]: {\r\n    left: -1,\r\n    top: 0\r\n  },\r\n  [directions.right]: {\r\n    left: 1,\r\n    top: 0\r\n  },\r\n  [directions.down]: {\r\n    left: 0,\r\n    top: 1\r\n  }\r\n};\r\n","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\nexport const blockedOut = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n","// https://tetris.fandom.com/wiki/SRS\r\nconst othersRight = [\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [-1, -1],\r\n    [0, 2],\r\n    [-1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, -2],\r\n    [1, -2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [1, -1],\r\n    [0, 2],\r\n    [1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [-1, 1],\r\n    [0, -2],\r\n    [-1, -2]\r\n  ]\r\n];\r\nconst othersLeft = [\r\n  othersRight[2],\r\n  othersRight[1],\r\n  othersRight[0],\r\n  othersRight[3]\r\n];\r\n\r\nconst iRight = [\r\n  [\r\n    [0, 0],\r\n    [-2, 0],\r\n    [1, 0],\r\n    [-2, 1],\r\n    [1, -2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [2, 0],\r\n    [-1, -2],\r\n    [2, 1]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [2, 0],\r\n    [-1, 0],\r\n    [2, -1],\r\n    [-1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [-2, 0],\r\n    [1, 2],\r\n    [-2, -1]\r\n  ]\r\n];\r\n\r\nconst iLeft = [iRight[1], iRight[2], iRight[3], iRight[0]];\r\n\r\nconst o = [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]];\r\n\r\nexport const left = {\r\n  I: iLeft,\r\n  O: o,\r\n  L: othersLeft,\r\n  J: othersLeft,\r\n  Z: othersLeft,\r\n  S: othersLeft,\r\n  T: othersLeft\r\n};\r\n\r\nexport const right = {\r\n  I: iRight,\r\n  O: o,\r\n  L: othersRight,\r\n  J: othersRight,\r\n  Z: othersRight,\r\n  S: othersRight,\r\n  T: othersRight\r\n};\r\n","import { blockedOut, landed } from './checks';\nimport { left, right } from '../constants/wallKickData';\n\nimport { directionOffset } from '../constants/directions';\n\nconst wallKick = (tetromino, playfield, wallKickData) => {\n  const wallKicked = {\n    ...tetromino,\n    left: tetromino.left + wallKickData[0][0],\n    top: tetromino.top + wallKickData[0][1]\n  };\n  return blockedOut(wallKicked, playfield)\n    ? wallKickData.length === 1\n      ? null\n      : wallKick(tetromino, playfield, wallKickData.slice(1))\n    : wallKicked;\n};\nconst tryRotate = (tetromino, originalTetromino, playfield, wallKickData) =>\n  wallKick(tetromino, playfield, wallKickData) ?? originalTetromino;\n\nconst tryMove = (updatedTetromino, originalTetromino, playfield) =>\n  blockedOut(updatedTetromino, playfield)\n    ? originalTetromino\n    : updatedTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  tryRotate(\n    {\n      ...tetromino,\n      rotationPhase: (tetromino.rotationPhase + 3) % 4,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield,\n    left[tetromino.name][tetromino.rotationPhase]\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  tryRotate(\n    {\n      ...tetromino,\n      rotationPhase: (tetromino.rotationPhase + 1) % 4,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield,\n    right[tetromino.name][tetromino.rotationPhase]\n  );\n\nexport const move = (tetromino, playfield, direction) =>\n  tryMove(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","import { blockedOut, landed } from '../../engine/checks';\nimport {\n  hardDrop,\n  lock,\n  move,\n  rotateLeft,\n  rotateRight\n} from '../../engine/actions';\n\nimport { clearLines } from '../../engine/clearLines';\nimport { directions } from '../../constants/directions';\nimport { phases } from '../../constants/phases';\n\nconst emptyPlayField = [...Array(22)].map(() =>\n  [...Array(10)].map(() => undefined)\n);\nconst doLock = (state) => {\n  const { tetromino, playfield } = state;\n  const lockResult = lock(tetromino, playfield);\n  return lockResult.locked\n    ? {\n        ...state,\n        tetromino: undefined,\n        ghostPiece: undefined,\n        playfield: lockResult.playfield,\n        sfx: 'locked',\n        phase: phases.clearing\n      }\n    : {\n        ...state,\n        phase: phases.descending\n      };\n};\n\nconst visitors = {\n  tick: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, directions.down);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      phase: landed(updatedTetromino, playfield) ? phases.locking : state.phase\n    };\n  },\n  move: (state, action) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, action.payload);\n    return state.phase === phases.locking && action.payload === directions.down\n      ? doLock(state)\n      : {\n          ...state,\n          tetromino: updatedTetromino,\n          ghostPiece: hardDrop(updatedTetromino, playfield),\n          phase: landed(updatedTetromino, playfield)\n            ? phases.locking\n            : phases.descending\n        };\n  },\n  lock: doLock,\n  clear: (state) => {\n    const { playfield } = state;\n    const clearResult = clearLines(playfield);\n    const lines = state.lines + clearResult.linesCleared;\n    return {\n      ...state,\n      playfield: clearResult.playfield,\n      lines,\n      sfx:\n        clearResult.linesCleared > 0\n          ? 'clear' + clearResult.linesCleared\n          : undefined,\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\n      phase: phases.spawning\n    };\n  },\n  rotateRight: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateRight(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: rotateRight(tetromino, playfield),\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  rotateLeft: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateLeft(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  spawn: (state, action) => {\n    const { queue, playfield } = state;\n    const newTetromino = queue[0];\n    const newQueue = queue.slice(1).concat(action.payload || []);\n    const isAlive =\n      !landed(newTetromino, playfield) && !blockedOut(newTetromino, playfield);\n    return {\n      ...state,\n      tetromino: newTetromino,\n      ghostPiece: hardDrop(newTetromino, playfield),\n      phase: isAlive ? phases.descending : phases.gameOver,\n      sfx: isAlive ? 'spawn' : 'gameOver',\n      queue: newQueue,\n      alive: isAlive\n    };\n  },\n  hardDrop: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = hardDrop(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      sfx: 'hardDrop',\n      phase: phases.locking\n    };\n  },\n  start: (state, action) => ({\n    playfield: emptyPlayField,\n    queue: action.payload,\n    phase: phases.starting,\n    tetromino: undefined,\n    alive: true,\n    interval: 1000,\n    lines: 0,\n    countdown: 3,\n    originalPhase: undefined\n  }),\n  countdown: (state) => ({\n    ...state,\n    countdown: Math.max(0, state.countdown - 1)\n  }),\n  pause: (state) => ({\n    ...state,\n    phase: phases.paused,\n    originalPhase: state.phase\n  }),\n  resume: (state) => ({\n    ...state,\n    phase: phases.resuming,\n    countdown: 3\n  }),\n  restore: (state) => ({\n    ...state,\n    phase: state.originalPhase,\n    originalPhase: undefined\n  })\n};\nconst validPhases = {\n  tick: [phases.descending],\n  move: [phases.descending, phases.locking],\n  lock: [phases.locking],\n  clear: [phases.clearing],\n  rotateLeft: [phases.descending, phases.locking],\n  rotateRight: [phases.descending, phases.locking],\n  spawn: [phases.spawning, phases.starting],\n  hardDrop: [phases.descending],\n  start: [phases.pending, phases.gameOver],\n  countdown: [phases.starting, phases.resuming],\n  pause: [phases.descending, phases.locking, phases.clearing, phases.spawning],\n  resume: [phases.paused],\n  restore: [phases.resuming]\n};\nexport const reducer = (state, action) =>\n  validPhases[action.type]?.includes(state.phase)\n    ? visitors[action.type](state, action)\n    : state;\n\nexport const initialState = {\n  playfield: emptyPlayField,\n  queue: [],\n  phase: phases.pending,\n  tetromino: undefined,\n  alive: false,\n  interval: 1000,\n  lines: 0,\n  countdown: 0\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport { directions } from '../../constants/directions';\nimport { phases } from '../../constants/phases';\nimport { initialState, reducer } from './reducer';\nimport { useEffect, useReducer } from 'react';\n\nconst keyActionMappings = {\n  ArrowLeft: { type: 'move', payload: directions.left },\n  ArrowRight: { type: 'move', payload: directions.right },\n  ArrowDown: { type: 'move', payload: directions.down },\n  ArrowUp: { type: 'rotateRight' },\n  x: { type: 'rotateRight' },\n  ' ': { type: 'hardDrop' },\n  Escape: { type: 'pause' },\n  F1: { type: 'pause' },\n  z: { type: 'rotateLeft' },\n  Control: { type: 'rotateLeft' }\n};\nexport const UseGameReducer = (audio, randomizer) => () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const shouldTick =\n    state.alive &&\n    state.tetromino !== undefined &&\n    state.phase !== phases.paused;\n  useEffect(() => {\n    const handle = shouldTick\n      ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\n      : 0;\n    return () => clearInterval(handle);\n  }, [shouldTick, state.interval]);\n\n  useEffect(() => {\n    if (state.sfx) {\n      audio[state.sfx]();\n    }\n  }, [state.sfx]);\n  useEffect(() => {\n    const phaseVisitors = {\n      [phases.spawning]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'spawn',\n              payload: state.queue.length <= 3 ? randomizer() : []\n            }),\n          500\n        ),\n      [phases.locking]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'lock'\n            }),\n          500\n        ),\n      [phases.clearing]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'clear'\n            }),\n          500\n        ),\n      [phases.starting]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'spawn',\n            payload: randomizer()\n          });\n        }\n      },\n      [phases.resuming]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'restore'\n          });\n        }\n      }\n    };\n    phaseVisitors[state.phase]?.();\n  }, [state.phase, state.queue.length, state.countdown]);\n  useEffect(() => {\n    const onKeydown = (e) => {\n      if (keyActionMappings[e.key]) {\n        dispatch(keyActionMappings[e.key]);\n        e.preventDefault();\n      }\n    };\n    if (state.alive) {\n      document.body.addEventListener('keydown', onKeydown);\n    }\n    return () => document.body.removeEventListener('keydown', onKeydown);\n  }, [state.alive]);\n\n  const start = () => dispatch({ type: 'start', payload: randomizer() });\n  const resume = () => dispatch({ type: 'resume' });\n  return {\n    state,\n    start,\n    resume\n  };\n};\n","//https://tetris.fandom.com/wiki/SRS\nconst _ = undefined;\nconst o = 'O';\nexport const O = {\n  top: 0,\n  left: 4,\n  name: o,\n  rotationPhase: 0,\n  shape: [\n    [o, o],\n    [o, o]\n  ]\n};\nconst i = 'I';\nexport const I = {\n  top: 0,\n  left: 3,\n  name: i,\n  rotationPhase: 0,\n  shape: [\n    [_, _, _, _],\n    [i, i, i, i],\n    [_, _, _, _],\n    [_, _, _, _]\n  ]\n};\nconst s = 'S';\nexport const S = {\n  top: 0,\n  left: 3,\n  name: s,\n  rotationPhase: 0,\n  shape: [\n    [_, s, s],\n    [s, s, _],\n    [_, _, _]\n  ]\n};\nconst z = 'Z';\nexport const Z = {\n  top: 0,\n  left: 3,\n  name: z,\n  rotationPhase: 0,\n  shape: [\n    [z, z, _],\n    [_, z, z],\n    [_, _, _]\n  ]\n};\nconst t = 'T';\nexport const T = {\n  top: 0,\n  left: 3,\n  name: t,\n  rotationPhase: 0,\n  shape: [\n    [_, t, _],\n    [t, t, t],\n    [_, _, _]\n  ]\n};\n\nconst j = 'J';\nexport const J = {\n  top: 0,\n  left: 3,\n  name: j,\n  rotationPhase: 0,\n  shape: [\n    [j, _, _],\n    [j, j, j],\n    [_, _, _]\n  ]\n};\n\nconst l = 'L';\nexport const L = {\n  top: 0,\n  left: 3,\n  name: l,\n  rotationPhase: 0,\n  shape: [\n    [_, _, l],\n    [l, l, l],\n    [_, _, _]\n  ]\n};\n","import GameFactory from './Game';\r\nimport { Player } from '../../sfx/player';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Player(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import { I, J, L, O, S, T, Z } from '../constants/tetrominos';\r\n\r\nconst shuffle = (xs) => {\r\n  const result = xs.slice(0);\r\n  let i = result.slice(0).length - 1;\r\n  while (i >= 0) {\r\n    const randomIndex = Math.floor(Math.random() * (i + 1));\r\n    const temp = result[i];\r\n    result[i] = result[randomIndex];\r\n    result[randomIndex] = temp;\r\n    i = i - 1;\r\n  }\r\n  return result;\r\n};\r\nexport const randomizer = () => shuffle([I, O, T, S, Z, J, L]);\r\n","import './App.scss';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}