{"version":3,"sources":["constants/phases.js","components/Game/Game.js","sfx/mp3/clear1.mp3","sfx/mp3/clear2.mp3","sfx/mp3/clear3.mp3","sfx/mp3/clear4.mp3","sfx/mp3/gameOver.mp3","sfx/mp3/hardDrop.mp3","sfx/mp3/locked.mp3","sfx/mp3/spawn.mp3","sfx/player.js","engine/checks.js","constants/wallKickData.js","constants/directions.js","engine/actions.js","engine/clearLines.js","constants/tetrominos.js","components/Game/reducer.js","components/Game/useGameReducer.js","components/Game/index.js","engine/randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["phases","Game","customHook","state","start","resume","getTetrominoBlock","tetromino","x","y","shape","top","left","className","hold","map","row","block","data-testid","playfield","phase","every","ghostPiece","onClick","countdown","queue","slice","i","lines","landed","height","length","some","occupied","blockedOut","width","othersRight","othersLeft","iRight","o","I","O","L","J","Z","S","T","right","directions","directionOffset","wallKick","wallKickData","wallKickDataIndex","wallKicked","tryRotate","originalTetromino","rotateRight","rotationPhase","_","name","move","direction","updatedTetromino","tryMove","merge","hardDrop","result","emptyLines","Array","undefined","s","z","t","j","l","lookup","emptyPlayField","doLock","lockResult","locked","lock","sfx","visitors","tick","action","payload","clear","clearResult","clearedPlayfield","reduceRight","acc","concat","linesCleared","clearLines","interval","Math","max","floor","rotateLeft","spawn","newTetromino","newQueue","isAlive","holdLock","alive","originalPhase","pause","restore","validPhases","reducer","type","includes","initialState","dispatchWith","dispatch","autoRepeat","repeatInterval","cancelKey","e","repeat","timeout","setTimeout","setInterval","cancelInterval","key","clearInterval","document","body","removeEventListener","addEventListener","cancelTimeout","clearTimeout","keyActionMappings","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Escape","F1","Control","c","audio","AudioContext","context","play","file","promiseOfAudio","fetch","then","data","arrayBuffer","decodeAudioData","decode","audioBuffer","source","createBufferSource","buffer","connect","destination","clear1","clear1Mp3","clear2","clear2Mp3","clear3","clear3Mp3","clear4","clear4Mp3","lockedMp3","spawnMp3","hardDropMp3","gameOver","gameOverMp3","Player","randomizer","GameFactory","xs","randomIndex","random","temp","shuffle","useReducer","shouldTick","useEffect","handle","phaseVisitors","onKeydown","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mLAAO,MAAMA,EACD,WADCA,EAEC,aAFDA,EAGF,UAHEA,EAID,WAJCA,EAKD,WALCA,EAMD,WANCA,EAOF,UAPEA,EAQH,SARGA,EASD,WCqFGC,MA3FDC,GAAe,KAAO,IAAD,EACjC,MAAM,MAAEC,EAAF,MAASC,EAAT,OAAgBC,GAAWH,IAC3BI,EAAoB,CAACC,EAAWC,EAAGC,KAAf,aACxBF,IAAS,UAAIA,EAAUG,MAAMD,EAAIF,EAAUI,YAAlC,aAAI,EAAqCH,EAAID,EAAUK,QAClE,OACE,qCACE,uBAAOC,UAAU,QAAjB,SACE,oCACE,sCACA,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,kBAAf,mBACGV,EAAMW,YADT,aACG,EAAYJ,MAAMK,KAAI,CAACC,EAAKP,IAC3B,qBAAaI,UAAU,MAAvB,SACGG,EAAID,KAAI,CAACE,EAAOT,IACf,qBAAKK,UAAWI,GAAYT,MAFtBC,cAUpB,uBAAMI,UAAU,QAAhB,UACE,qBAAKK,cAAY,YAAYL,UAAU,0BAAvC,SACGV,EAAMgB,UAAUJ,KAAI,CAACC,EAAKP,IACzB,qBAEEI,UACE,OACiB,aAAhBV,EAAMiB,OAAwBJ,EAAIK,OAAOb,GAAMA,IAC5C,YACA,IANR,SASGQ,EAAID,KAAI,CAACE,EAAOT,IACf,qBAEEK,UACEP,EAAkBH,EAAMI,UAAWC,EAAGC,KACrCH,EAAkBH,EAAMmB,WAAYd,EAAGC,GACpC,cACA,KACJQ,GACA,IAPGT,MAVJC,OAwBVN,EAAMiB,QAAUpB,GAAkBG,EAAMiB,QAAUpB,EACjD,qBAAKa,UAAU,WAAf,SACE,wBAAQU,QAASnB,EAAjB,qBAEA,KACHD,EAAMiB,QAAUpB,EACf,qBAAKa,UAAU,WAAf,SACE,wBAAQU,QAASlB,EAAjB,sBAEA,KAEHF,EAAMqB,UAAY,EACjB,qBAAKX,UAAU,YAAf,SAA4BV,EAAMqB,YAChC,QAEN,wBAAOX,UAAU,QAAjB,UACE,oCACE,sCACA,qBAAKA,UAAU,gCAAf,SACGV,EAAMsB,MAAMC,MAAM,EAAG,GAAGX,KAAI,CAACR,EAAWoB,IACvC,qBAAKd,UAAU,kBAAf,SACGN,EAAUG,MAAMK,KAAI,CAACC,EAAKP,IACzB,qBAAaI,UAAU,MAAvB,SACGG,EAAID,KAAI,CAACE,EAAOT,IACf,qBAAKK,UAAWI,GAAYT,MAFtBC,MAFwBkB,UAY5C,oCACE,uCACA,qBAAKd,UAAU,sBAAf,SAAsCV,EAAMyB,kBCvFvC,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,kCCSlC,MCTMC,EAAS,CAACtB,EAAWY,KAChC,MAAMW,EAASX,EAAUY,OACzB,OAAOxB,EAAUG,MAAMsB,MAAK,CAAChB,EAAKP,IAChCO,EAAIgB,MACF,CAACC,EAAUzB,IACTyB,IACCxB,EAAIF,EAAUI,KAAOmB,EAAS,GAC7BX,EAAUV,EAAIF,EAAUI,IAAM,GAAGH,EAAID,EAAUK,YAK5CsB,EAAa,CAAC3B,EAAWY,KACpC,MAAMgB,EAAQhB,EAAU,GAAGY,OACrBD,EAASX,EAAUY,OACzB,OAAOxB,EAAUG,MAAMsB,MAAK,CAAChB,EAAKP,IAChCO,EAAIgB,MACF,CAACC,EAAUzB,IACTyB,IACCzB,EAAID,EAAUK,KAAO,GACpBJ,EAAID,EAAUK,MAAQuB,GACtB1B,EAAIF,EAAUI,KAAOmB,GACrBX,EAAUV,EAAIF,EAAUI,KAAKH,EAAID,EAAUK,YCrB/CwB,EAAc,CAClB,CACE,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,GAAI,GACN,CAAC,EAAG,GACJ,EAAE,EAAG,IAEP,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,GAAI,IAEP,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,CACE,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,GACL,CAAC,GAAI,GACL,EAAE,GAAI,KAGJC,EAAa,CACjBD,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,IAGRE,EAAS,CACb,CACE,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,GAAI,IAEP,CACE,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,GAAI,GACN,CAAC,EAAG,IAEN,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,GAAI,GACL,EAAE,EAAG,IAEP,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,GAAI,KAMJC,EAAI,CAAC,CAAC,CAAC,EAAG,IAAK,CAAC,CAAC,EAAG,IAAK,CAAC,CAAC,EAAG,IAAK,CAAC,CAAC,EAAG,KAEjC3B,EAAO,CAClB4B,EALY,CAACF,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAMrDG,EAAGF,EACHG,EAAGL,EACHM,EAAGN,EACHO,EAAGP,EACHQ,EAAGR,EACHS,EAAGT,GAGQU,EAAQ,CACnBP,EAAGF,EACHG,EAAGF,EACHG,EAAGN,EACHO,EAAGP,EACHQ,EAAGR,EACHS,EAAGT,EACHU,EAAGV,GC1FQY,EACL,GADKA,EAEJ,GAFIA,EAGL,GAEKC,EAAkB,CAC7B,CAACD,GAAkB,CACjBpC,MAAO,EACPD,IAAK,GAEP,CAACqC,GAAmB,CAClBpC,KAAM,EACND,IAAK,GAEP,CAACqC,GAAkB,CACjBpC,KAAM,EACND,IAAK,ICXHuC,EAAW,CACf3C,EACAY,EACAgC,EACAC,EAAoB,KAEpB,MAAMC,EAAa,IACd9C,EACHK,KAAML,EAAUK,KAAOuC,EAAaC,GAAmB,GACvDzC,IAAKJ,EAAUI,IAAMwC,EAAaC,GAAmB,IAEvD,OAAOlB,EAAWmB,EAAYlC,GAC1BiC,IAAsBD,EAAapB,OAAS,EAC1C,KACAmB,EAAS3C,EAAWY,EAAWgC,EAAcC,EAAoB,GACnEC,GAEAC,EAAY,CAAC/C,EAAWgD,EAAmBpC,EAAWgC,KAA1C,uBAChBD,EAAS3C,EAAWY,EAAWgC,UADf,QACgCI,GAoBrCC,EAAc,CAACjD,EAAWY,IACrCmC,EACE,IACK/C,EACHkD,eAAgBlD,EAAUkD,cAAgB,GAAK,EAC/C/C,MAAOH,EAAUG,MAAMK,KAAI,CAACC,EAAKP,IAC/BO,EAAID,KAAI,CAAC2C,EAAGlD,IAAMD,EAAUG,MAAMH,EAAUG,MAAMqB,OAAS,EAAIvB,GAAGC,QAGtEF,EACAY,EACA4B,EAAMxC,EAAUoD,MAAMpD,EAAUkD,gBAGvBG,EAAO,CAACrD,EAAWY,EAAW0C,IAhC3B,EAACC,EAAkBP,EAAmBpC,IACpDe,EAAW4B,EAAkB3C,GACzBoC,EACAO,EA8BJC,CACE,IACKxD,EACHK,KAAML,EAAUK,KAAOqC,EAAgBY,GAAWjD,KAClDD,IAAKJ,EAAUI,IAAMsC,EAAgBY,GAAWlD,KAElDJ,EACAY,GAEE6C,EAAQ,CAACzD,EAAWY,IACxBA,EAAUJ,KAAI,CAACC,EAAKP,IAClBO,EAAID,KACF,CAACkB,EAAUzB,KAAX,aACEyB,IAAQ,UAAI1B,EAAUG,MAAMD,EAAIF,EAAUI,YAAlC,aAAI,EAAqCH,EAAID,EAAUK,YAY1DqD,EAAW,CAAC1D,EAAWY,EAAWR,EAAMJ,EAAUI,OAC7D,MAAMuD,EAAS,IAAK3D,EAAWI,OAC/B,OAAOkB,EAAOqC,EAAQ/C,GAClB+C,EACAD,EAAS1D,EAAWY,EAAWR,EAAM,ICvFrCwD,EAAa,CAAChC,EAAOL,IACzB,IAAIsC,MAAMtC,IAASf,KAAI,IAAM,IAAIqD,MAAMjC,IAAQpB,KAAI,WCA/C2C,OAAIW,EACJ9B,EAAI,IACGE,EAAI,CACf9B,IAAK,EACLC,KAAM,EACN+C,KAAMpB,EACNkB,cAAe,EACf/C,MAAO,CACL,CAAC6B,EAAGA,GACJ,CAACA,EAAGA,KAGFZ,EAAI,IACGa,EAAI,CACf7B,IAAK,EACLC,KAAM,EACN+C,KAAMhC,EACN8B,cAAe,EACf/C,MAAO,CACL,CAACgD,EAAGA,EAAGA,EAAGA,GACV,CAAC/B,EAAGA,EAAGA,EAAGA,GACV,CAAC+B,EAAGA,EAAGA,EAAGA,GACV,CAACA,EAAGA,EAAGA,EAAGA,KAGRY,EAAI,IACGzB,EAAI,CACflC,IAAK,EACLC,KAAM,EACN+C,KAAMW,EACNb,cAAe,EACf/C,MAAO,CACL,CAACgD,EAAGY,EAAGA,GACP,CAACA,EAAGA,EAAGZ,GACP,CAACA,EAAGA,EAAGA,KAGLa,EAAI,IACG3B,EAAI,CACfjC,IAAK,EACLC,KAAM,EACN+C,KAAMY,EACNd,cAAe,EACf/C,MAAO,CACL,CAAC6D,EAAGA,EAAGb,GACP,CAACA,EAAGa,EAAGA,GACP,CAACb,EAAGA,EAAGA,KAGLc,GAAI,IACG1B,GAAI,CACfnC,IAAK,EACLC,KAAM,EACN+C,KAAMa,GACNf,cAAe,EACf/C,MAAO,CACL,CAACgD,EAAGc,GAAGd,GACP,CAACc,GAAGA,GAAGA,IACP,CAACd,EAAGA,EAAGA,KAILe,GAAI,IACG9B,GAAI,CACfhC,IAAK,EACLC,KAAM,EACN+C,KAAMc,GACNhB,cAAe,EACf/C,MAAO,CACL,CAAC+D,GAAGf,EAAGA,GACP,CAACe,GAAGA,GAAGA,IACP,CAACf,EAAGA,EAAGA,KAILgB,GAAI,IACGhC,GAAI,CACf/B,IAAK,EACLC,KAAM,EACN+C,KAAMe,GACNjB,cAAe,EACf/C,MAAO,CACL,CAACgD,EAAGA,EAAGgB,IACP,CAACA,GAAGA,GAAGA,IACP,CAAChB,EAAGA,EAAGA,KAIEiB,GAAS,CACpBlC,IAAGC,KAAGC,KAAGC,IAAGJ,IAAGM,KAAGD,KC5Ed+B,GAAiB,IAAIR,MAAM,KAAKrD,KAAI,IACxC,IAAIqD,MAAM,KAAKrD,KAAI,WAEf8D,GAAU1E,IACd,MAAM,UAAEI,EAAF,UAAaY,GAAchB,EAC3B2E,EHwDY,EAACvE,EAAWY,KAC9B,MAAM4D,EAASlD,EAAOtB,EAAWY,GACjC,MAAO,CACLA,UAAW4D,EAASf,EAAMzD,EAAWY,GAAaA,EAClD4D,WG5DiBC,CAAKzE,EAAWY,GACnC,OAAO2D,EAAWC,OACd,IACK5E,EACHI,eAAW8D,EACX/C,gBAAY+C,EACZlD,UAAW2D,EAAW3D,UACtB8D,IAAK,SACL7D,MAAOpB,GAET,IACKG,EACHiB,MAAOpB,IAITkF,GAAW,CACfC,KAAOhF,IACL,MAAM,UAAEI,EAAF,UAAaY,GAAchB,EAC3B2D,EAAmBF,EAAKrD,EAAWY,EAAW6B,GACpD,MAAO,IACF7C,EACHI,UAAWuD,EACX1C,MAAOS,EAAOiC,EAAkB3C,GAAanB,EAAiBG,EAAMiB,QAGxEwC,KAAM,CAACzD,EAAOiF,KACZ,MAAM,UAAE7E,EAAF,UAAaY,GAAchB,EAC3B2D,EAAmBF,EAAKrD,EAAWY,EAAWiE,EAAOC,SAC3D,OAAOlF,EAAMiB,QAAUpB,GAAkBoF,EAAOC,UAAYrC,EACxD6B,GAAO1E,GACP,IACKA,EACHI,UAAWuD,EACXxC,WAAY2C,EAASH,EAAkB3C,GACvCC,MAAOS,EAAOiC,EAAkB3C,GAC5BnB,EACAA,IAGZgF,KAAMH,GACNS,MAAQnF,IACN,MAAM,UAAEgB,GAAchB,EAChBoF,EF3DiBpE,KACzB,MAAMgB,EAAQhB,EAAU,GAAGY,OACrByD,EAAmBrE,EAAUsE,aACjC,CAACC,EAAK1E,IAASA,EAAIK,OAAOY,GAAaA,IAAYyD,EAAM,CAAC1E,GAAK2E,OAAOD,IACtE,IAEIE,EAAezE,EAAUY,OAASyD,EAAiBzD,OACzD,MAAO,CACLZ,UAAWgD,EAAWhC,EAAOyD,GAAcD,OAAOH,GAClDI,iBEkDoBC,CAAW1E,GACzBS,EAAQzB,EAAMyB,MAAQ2D,EAAYK,aACxC,MAAO,IACFzF,EACHgB,UAAWoE,EAAYpE,UACvBS,QACAqD,IACEM,EAAYK,aAAe,EACvB,QAAUL,EAAYK,kBACtBvB,EACNyB,SAAUC,KAAKC,IAAI,IAAK,IAAgC,IAAzBD,KAAKE,MAAMrE,EAAQ,KAClDR,MAAOpB,IAGXwD,YAAcrD,IACZ,MAAM,UAAEI,EAAF,UAAaY,GAAchB,EAC3B2D,EAAmBN,EAAYjD,EAAWY,GAChD,MAAO,IACFhB,EACHI,UAAWiD,EAAYjD,EAAWY,GAClCG,WAAY2C,EAASH,EAAkB3C,KAG3C+E,WAAa/F,IACX,MAAM,UAAEI,EAAF,UAAaY,GAAchB,EAC3B2D,EHzDgB,EAACvD,EAAWY,IACpCmC,EACE,IACK/C,EACHkD,eAAgBlD,EAAUkD,cAAgB,GAAK,EAC/C/C,MAAOH,EAAUG,MAAMK,KAAI,CAACC,EAAKP,IAC/BO,EAAID,KAAI,CAAC2C,EAAGlD,IAAMD,EAAUG,MAAMF,GAAGD,EAAUG,MAAMqB,OAAS,EAAItB,QAGtEF,EACAY,EACAP,EAAKL,EAAUoD,MAAMpD,EAAUkD,gBG8CNyC,CAAW3F,EAAWY,GAC/C,MAAO,IACFhB,EACHI,UAAWuD,EACXxC,WAAY2C,EAASH,EAAkB3C,KAG3CgF,MAAO,CAAChG,EAAOiF,KACb,MAAM,MAAE3D,EAAF,UAASN,GAAchB,EACvBiG,EAAe3E,EAAM,GACrB4E,EAAW5E,EAAMC,MAAM,GAAGiE,OAAOP,EAAOC,SAAW,IACnDiB,GACHzE,EAAOuE,EAAcjF,KAAee,EAAWkE,EAAcjF,GAChE,MAAO,IACFhB,EACHI,UAAW6F,EACX9E,WAAY2C,EAASmC,EAAcjF,GACnCC,MAAOkF,EAAUtG,EAAoBA,EACrCiF,IAAKqB,EAAU,QAAU,WACzB7E,MAAO4E,EACPE,UAAU,EACVC,MAAOF,IAGXrC,SAAW9D,IACT,MAAM,UAAEI,EAAF,UAAaY,GAAchB,EAC3B2D,EAAmBG,EAAS1D,EAAWY,GAC7C,OAAO0D,GAAO,IACT1E,EACHI,UAAWuD,EACX1C,MAAOpB,KAGXI,MAAO,CAACD,EAAOiF,KAAR,CACLjE,UAAWyD,GACXnD,MAAO2D,EAAOC,QACdjE,MAAOpB,EACPO,eAAW8D,EACXmC,OAAO,EACPV,SAAU,IACVlE,MAAO,EACPJ,UAAW,EACXiF,mBAAepC,IAEjB7C,UAAYrB,IAAD,IACNA,EACHqB,UAAWuE,KAAKC,IAAI,EAAG7F,EAAMqB,UAAY,KAE3CkF,MAAQvG,IAAD,IACFA,EACHiB,MAAOpB,EACPyG,cAAetG,EAAMiB,QAEvBf,OAASF,IAAD,IACHA,EACHiB,MAAOpB,EACPwB,UAAW,IAEbmF,QAAUxG,IAAD,IACJA,EACHiB,MAAOjB,EAAMsG,cACbA,mBAAepC,IAEjBvD,KAAOX,IAAW,IAAD,EACf,MAAMI,EAAS,UAAGJ,EAAMW,YAAT,QAAiBX,EAAMsB,MAAM,GAC5C,OAAOtB,EAAMoG,SACTpG,EACA,IACKA,EACHW,KAAM6D,GAAOxE,EAAMI,UAAUoD,MAC7B4C,UAAU,EACVhG,YACAkB,MAAOtB,EAAMW,KAAOX,EAAMsB,MAAQtB,EAAMsB,MAAMC,MAAM,GACpDJ,WAAY2C,EAAS1D,EAAWJ,EAAMgB,cAI1CyF,GAAc,CAClBzB,KAAM,CAACnF,GACP4D,KAAM,CAAC5D,EAAmBA,GAC1BgF,KAAM,CAAChF,GACPsF,MAAO,CAACtF,GACRkG,WAAY,CAAClG,EAAmBA,GAChCwD,YAAa,CAACxD,EAAmBA,GACjCmG,MAAO,CAACnG,EAAiBA,GACzBiE,SAAU,CAACjE,GACXI,MAAO,CAACJ,EAAgBA,GACxBwB,UAAW,CAACxB,EAAiBA,GAC7B0G,MAAO,CAAC1G,EAAmBA,EAAgBA,EAAiBA,GAC5DK,OAAQ,CAACL,GACT2G,QAAS,CAAC3G,GACVc,KAAM,CAACd,IAEI6G,GAAU,CAAC1G,EAAOiF,KAAR,aACrB,UAAAwB,GAAYxB,EAAO0B,aAAnB,eAA0BC,SAAS5G,EAAMiB,QACrC8D,GAASE,EAAO0B,MAAM3G,EAAOiF,GAC7BjF,GAEO6G,GAAe,CAC1B7F,UAAWyD,GACXnD,MAAO,GACPL,MAAOpB,EACPO,eAAW8D,EACXmC,OAAO,EACPV,SAAU,IACVlE,MAAO,EACPJ,UAAW,GCzLPyF,GAAgB7B,GAAY8B,GAAaA,EAAS9B,GAClD+B,GAAa,CAAC/B,EAAQgC,EAAgBC,IAAc,CAACH,EAAUI,KACnE,GAAIA,EAAEC,OACJ,OAEFL,EAAS9B,GACT,MACMoC,EAAUC,YAAW,KACzB,MAAM3B,EAAW4B,aAAY,KAC3BR,EAAS9B,KACRgC,GACGO,EAAkBL,IAClBA,EAAEM,MAAQP,IACZQ,cAAc/B,GACdgC,SAASC,KAAKC,oBAAoB,QAASL,KAG/CG,SAASC,KAAKE,iBAAiB,QAASN,KAX5B,IAAMP,GAadc,EAAiBZ,IACjBA,EAAEM,MAAQP,IACZc,aAAaX,GACbM,SAASC,KAAKC,oBAAoB,QAASE,KAG/CJ,SAASC,KAAKE,iBAAiB,QAASC,IAEpCE,GAAoB,CACxBC,UAAWlB,GACT,CAAEL,KAAM,OAAQzB,QAASrC,GACzB,GACA,aAEFsF,WAAYnB,GACV,CAAEL,KAAM,OAAQzB,QAASrC,GACzB,GACA,cAEFuF,UAAWpB,GACT,CAAEL,KAAM,OAAQzB,QAASrC,GACzB,GACA,aAEFwF,QAASvB,GAAa,CAAEH,KAAM,gBAC9BtG,EAAGyG,GAAa,CAAEH,KAAM,gBACxB,IAAKG,GAAa,CAAEH,KAAM,aAC1B2B,OAAQxB,GAAa,CAAEH,KAAM,UAC7B4B,GAAIzB,GAAa,CAAEH,KAAM,UACzBvC,EAAG0C,GAAa,CAAEH,KAAM,eACxB6B,QAAS1B,GAAa,CAAEH,KAAM,eAC9B8B,EAAG3B,GAAa,CAAEH,KAAM,UCrDpB+B,GTIiBC,KACrB,MAAMC,EAAU,IAAID,EAMdE,EAAQC,IACZ,MAAMC,EANQD,IACdE,MAAMF,GACHG,MAAMC,GAASA,EAAKC,gBACpBF,MAAME,GAAgBP,EAAQQ,gBAAgBD,KAG1BE,CAAOP,GAC9B,MAAO,IACLC,EAAeE,MAAMK,IACnB,MAAMC,EAASX,EAAQY,qBACvBD,EAAOE,OAASH,EAChBC,EAAOG,QAAQd,EAAQe,aACvBJ,EAAOtJ,YAIb,MAAO,CACL2J,OAAQf,EAAKgB,GACbC,OAAQjB,EAAKkB,GACbC,OAAQnB,EAAKoB,GACbC,OAAQrB,EAAKsB,GACbvF,OAAQiE,EAAKuB,GACbpE,MAAO6C,EAAKwB,GACZvG,SAAU+E,EAAKyB,GACfC,SAAU1B,EAAK2B,KS9BLC,CAAO9B,cDuDS,IAACD,GAAOgC,GCpDvB5K,OADF6K,GDqDkBjC,GCtDOA,GDsDAgC,GE9CZ,IAZTE,KACf,MAAM7G,EAAS6G,EAAGrJ,MAAM,GACxB,IAAIC,EAAIuC,EAAOxC,MAAM,GAAGK,OAAS,EACjC,KAAOJ,GAAK,GAAG,CACb,MAAMqJ,EAAcjF,KAAKE,MAAMF,KAAKkF,UAAYtJ,EAAI,IAC9CuJ,EAAOhH,EAAOvC,GACpBuC,EAAOvC,GAAKuC,EAAO8G,GACnB9G,EAAO8G,GAAeE,EACtBvJ,GAAQ,EAEV,OAAOuC,GAEuBiH,CAAQ,CAAC3I,EAAGC,EAAGK,GAAGD,EAAGD,EAAGD,GAAGD,KF8CN,KACnD,MAAOvC,EAAO+G,GAAYkE,qBAAWvE,GAASG,IACxCqE,EACJlL,EAAMqG,YACcnC,IAApBlE,EAAMI,WACNJ,EAAMiB,QAAUpB,EAqFlB,OApFAsL,qBAAU,KACR,MAAMC,EAASF,EACX3D,aAAY,IAAMR,EAAS,CAAEJ,KAAM,UAAW3G,EAAM2F,UACpD,EACJ,MAAO,IAAM+B,cAAc0D,KAC1B,CAACF,EAAYlL,EAAM2F,WAEtBwF,qBAAU,KACJnL,EAAM8E,KACR4D,GAAM1I,EAAM8E,SAEb,CAAC9E,EAAM8E,MACVqG,qBAAU,KAAO,IAAD,EACd,MAAME,EAAgB,CACpB,CAACxL,GAAkB,IACjBkH,EAAS,CACPJ,KAAM,QACNzB,QAASlF,EAAMsB,MAAMM,QAAU,EAAI8I,KAAe,KAEtD,CAAC7K,GAAiB,IAChByH,YACE,IACEP,EAAS,CACPJ,KAAM,UAEV,KAEJ,CAAC9G,GAAkB,IACjByH,YACE,IACEP,EAAS,CACPJ,KAAM,WAEV,KAEJ,CAAC9G,GAAkB,KACbG,EAAMqB,UAAY,EACpBiG,YACE,IACEP,EAAS,CACPJ,KAAM,eAEV,KAGFI,EAAS,CACPJ,KAAM,QACNzB,QAASwF,QAIf,CAAC7K,GAAkB,KACbG,EAAMqB,UAAY,EACpBiG,YACE,IACEP,EAAS,CACPJ,KAAM,eAEV,KAGFI,EAAS,CACPJ,KAAM,cAKd,UAAA0E,EAAcrL,EAAMiB,cAApB,cAAAoK,KACC,CAACrL,EAAMiB,MAAOjB,EAAMsB,MAAMM,OAAQ5B,EAAMqB,YAC3C8J,qBAAU,KACR,MAAMG,EAAanE,IACbc,GAAkBd,EAAEM,OACtBQ,GAAkBd,EAAEM,KAAKV,EAAUI,GACnCA,EAAEoE,mBAMN,OAHIvL,EAAMqG,OACRsB,SAASC,KAAKE,iBAAiB,UAAWwD,GAErC,IAAM3D,SAASC,KAAKC,oBAAoB,UAAWyD,KACzD,CAACtL,EAAMqG,QAIH,CACLrG,QACAC,MAJY,IAAM8G,EAAS,CAAEJ,KAAM,QAASzB,QAASwF,OAKrDxK,OAJa,IAAM6G,EAAS,CAAEJ,KAAM,eG9IzB6E,OAFH,IAAM,cAAC,GAAD,ICOHC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,EAAG2C,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxE,SAASyE,eAAe,SAM1BX,M","file":"static/js/main.aa878aff.chunk.js","sourcesContent":["export const phases = {\r\n  spawning: 'spawning',\r\n  descending: 'descending',\r\n  locking: 'locking',\r\n  clearing: 'clearing',\r\n  gameOver: 'gameOver',\r\n  starting: 'starting',\r\n  pending: 'pending',\r\n  paused: 'paused',\r\n  resuming: 'resuming'\r\n};\r\n","import React from 'react';\r\nimport { phases } from '../../constants/phases';\r\n\r\nconst Game = (customHook) => () => {\r\n  const { state, start, resume } = customHook();\r\n  const getTetrominoBlock = (tetromino, x, y) =>\r\n    tetromino && tetromino.shape[y - tetromino.top]?.[x - tetromino.left];\r\n  return (\r\n    <>\r\n      <aside className=\"frame\">\r\n        <section>\r\n          <h1>HOLD</h1>\r\n          <div className=\"frame-content hold\">\r\n            <div className=\"small-tetromino\">\r\n              {state.hold?.shape.map((row, y) => (\r\n                <div key={y} className=\"row\">\r\n                  {row.map((block, x) => (\r\n                    <div className={block} key={x}></div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </aside>\r\n      <main className=\"frame\">\r\n        <div data-testid=\"playfield\" className=\"playfield frame-content\">\r\n          {state.playfield.map((row, y) => (\r\n            <div\r\n              key={y}\r\n              className={\r\n                'row' +\r\n                (state.phase === 'clearing' && row.every((x) => x)\r\n                  ? ' clearing'\r\n                  : '')\r\n              }\r\n            >\r\n              {row.map((block, x) => (\r\n                <div\r\n                  key={x}\r\n                  className={\r\n                    getTetrominoBlock(state.tetromino, x, y) ||\r\n                    (getTetrominoBlock(state.ghostPiece, x, y)\r\n                      ? 'ghost-piece'\r\n                      : '') ||\r\n                    block ||\r\n                    ''\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {state.phase === phases.pending || state.phase === phases.gameOver ? (\r\n          <div className=\"controls\">\r\n            <button onClick={start}>START</button>\r\n          </div>\r\n        ) : null}\r\n        {state.phase === phases.paused ? (\r\n          <div className=\"controls\">\r\n            <button onClick={resume}>RESUME</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {state.countdown > 0 ? (\r\n          <div className=\"countdown\">{state.countdown}</div>\r\n        ) : null}\r\n      </main>\r\n      <aside className=\"frame\">\r\n        <section>\r\n          <h1>NEXT</h1>\r\n          <div className=\"frame-content next-tetrominos\">\r\n            {state.queue.slice(0, 3).map((tetromino, i) => (\r\n              <div className=\"small-tetromino\" key={i}>\r\n                {tetromino.shape.map((row, y) => (\r\n                  <div key={y} className=\"row\">\r\n                    {row.map((block, x) => (\r\n                      <div className={block} key={x}></div>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h1>LINES</h1>\r\n          <div className=\"frame-content lines\">{state.lines}</div>\r\n        </section>\r\n      </aside>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/clear1.fe1236db.mp3\";","export default __webpack_public_path__ + \"static/media/clear2.42d27630.mp3\";","export default __webpack_public_path__ + \"static/media/clear3.50cd846e.mp3\";","export default __webpack_public_path__ + \"static/media/clear4.529df8a4.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.f52cf5f0.mp3\";","export default __webpack_public_path__ + \"static/media/hardDrop.d2d4cb32.mp3\";","export default __webpack_public_path__ + \"static/media/locked.f92eb651.mp3\";","export default __webpack_public_path__ + \"static/media/spawn.dcb5ecc2.mp3\";","import clear1Mp3 from './mp3/clear1.mp3';\r\nimport clear2Mp3 from './mp3/clear2.mp3';\r\nimport clear3Mp3 from './mp3/clear3.mp3';\r\nimport clear4Mp3 from './mp3/clear4.mp3';\r\nimport gameOverMp3 from './mp3/gameOver.mp3';\r\nimport hardDropMp3 from './mp3/hardDrop.mp3';\r\nimport lockedMp3 from './mp3/locked.mp3';\r\nimport spawnMp3 from './mp3/spawn.mp3';\r\n\r\nexport const Player = (AudioContext) => {\r\n  const context = new AudioContext();\r\n  const decode = (file) =>\r\n    fetch(file)\r\n      .then((data) => data.arrayBuffer())\r\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer));\r\n\r\n  const play = (file) => {\r\n    const promiseOfAudio = decode(file);\r\n    return () =>\r\n      promiseOfAudio.then((audioBuffer) => {\r\n        const source = context.createBufferSource();\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination);\r\n        source.start();\r\n      });\r\n  };\r\n\r\n  return {\r\n    clear1: play(clear1Mp3),\r\n    clear2: play(clear2Mp3),\r\n    clear3: play(clear3Mp3),\r\n    clear4: play(clear4Mp3),\r\n    locked: play(lockedMp3),\r\n    spawn: play(spawnMp3),\r\n    hardDrop: play(hardDropMp3),\r\n    gameOver: play(gameOverMp3)\r\n  };\r\n};\r\n","export const landed = (tetromino, playfield) => {\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (y + tetromino.top >= height - 1 ||\n          playfield[y + tetromino.top + 1][x + tetromino.left])\n    )\n  );\n};\n\nexport const blockedOut = (tetromino, playfield) => {\n  const width = playfield[0].length;\n  const height = playfield.length;\n  return tetromino.shape.some((row, y) =>\n    row.some(\n      (occupied, x) =>\n        occupied &&\n        (x + tetromino.left < 0 ||\n          x + tetromino.left >= width ||\n          y + tetromino.top >= height ||\n          playfield[y + tetromino.top][x + tetromino.left])\n    )\n  );\n};\n","// https://tetris.fandom.com/wiki/SRS\r\nconst othersRight = [\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [-1, -1],\r\n    [0, 2],\r\n    [-1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, -2],\r\n    [1, -2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [1, -1],\r\n    [0, 2],\r\n    [1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [-1, 1],\r\n    [0, -2],\r\n    [-1, -2]\r\n  ]\r\n];\r\nconst othersLeft = [\r\n  othersRight[2],\r\n  othersRight[1],\r\n  othersRight[0],\r\n  othersRight[3]\r\n];\r\n\r\nconst iRight = [\r\n  [\r\n    [0, 0],\r\n    [-2, 0],\r\n    [1, 0],\r\n    [-2, 1],\r\n    [1, -2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [-1, 0],\r\n    [2, 0],\r\n    [-1, -2],\r\n    [2, 1]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [2, 0],\r\n    [-1, 0],\r\n    [2, -1],\r\n    [-1, 2]\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [1, 0],\r\n    [-2, 0],\r\n    [1, 2],\r\n    [-2, -1]\r\n  ]\r\n];\r\n\r\nconst iLeft = [iRight[1], iRight[2], iRight[3], iRight[0]];\r\n\r\nconst o = [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]];\r\n\r\nexport const left = {\r\n  I: iLeft,\r\n  O: o,\r\n  L: othersLeft,\r\n  J: othersLeft,\r\n  Z: othersLeft,\r\n  S: othersLeft,\r\n  T: othersLeft\r\n};\r\n\r\nexport const right = {\r\n  I: iRight,\r\n  O: o,\r\n  L: othersRight,\r\n  J: othersRight,\r\n  Z: othersRight,\r\n  S: othersRight,\r\n  T: othersRight\r\n};\r\n","export const directions = {\r\n  left: 37,\r\n  right: 39,\r\n  down: 40\r\n};\r\nexport const directionOffset = {\r\n  [directions.left]: {\r\n    left: -1,\r\n    top: 0\r\n  },\r\n  [directions.right]: {\r\n    left: 1,\r\n    top: 0\r\n  },\r\n  [directions.down]: {\r\n    left: 0,\r\n    top: 1\r\n  }\r\n};\r\n","import { blockedOut, landed } from './checks';\nimport { left, right } from '../constants/wallKickData';\n\nimport { directionOffset } from '../constants/directions';\n\nconst wallKick = (\n  tetromino,\n  playfield,\n  wallKickData,\n  wallKickDataIndex = 0\n) => {\n  const wallKicked = {\n    ...tetromino,\n    left: tetromino.left + wallKickData[wallKickDataIndex][0],\n    top: tetromino.top + wallKickData[wallKickDataIndex][1]\n  };\n  return blockedOut(wallKicked, playfield)\n    ? wallKickDataIndex === wallKickData.length - 1\n      ? null\n      : wallKick(tetromino, playfield, wallKickData, wallKickDataIndex + 1)\n    : wallKicked;\n};\nconst tryRotate = (tetromino, originalTetromino, playfield, wallKickData) =>\n  wallKick(tetromino, playfield, wallKickData) ?? originalTetromino;\n\nconst tryMove = (updatedTetromino, originalTetromino, playfield) =>\n  blockedOut(updatedTetromino, playfield)\n    ? originalTetromino\n    : updatedTetromino;\n\nexport const rotateLeft = (tetromino, playfield) =>\n  tryRotate(\n    {\n      ...tetromino,\n      rotationPhase: (tetromino.rotationPhase + 3) % 4,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[x][tetromino.shape.length - 1 - y])\n      )\n    },\n    tetromino,\n    playfield,\n    left[tetromino.name][tetromino.rotationPhase]\n  );\nexport const rotateRight = (tetromino, playfield) =>\n  tryRotate(\n    {\n      ...tetromino,\n      rotationPhase: (tetromino.rotationPhase + 1) % 4,\n      shape: tetromino.shape.map((row, y) =>\n        row.map((_, x) => tetromino.shape[tetromino.shape.length - 1 - x][y])\n      )\n    },\n    tetromino,\n    playfield,\n    right[tetromino.name][tetromino.rotationPhase]\n  );\n\nexport const move = (tetromino, playfield, direction) =>\n  tryMove(\n    {\n      ...tetromino,\n      left: tetromino.left + directionOffset[direction].left,\n      top: tetromino.top + directionOffset[direction].top\n    },\n    tetromino,\n    playfield\n  );\nconst merge = (tetromino, playfield) =>\n  playfield.map((row, y) =>\n    row.map(\n      (occupied, x) =>\n        occupied || tetromino.shape[y - tetromino.top]?.[x - tetromino.left]\n    )\n  );\n\nexport const lock = (tetromino, playfield) => {\n  const locked = landed(tetromino, playfield);\n  return {\n    playfield: locked ? merge(tetromino, playfield) : playfield,\n    locked\n  };\n};\n\nexport const hardDrop = (tetromino, playfield, top = tetromino.top) => {\n  const result = { ...tetromino, top };\n  return landed(result, playfield)\n    ? result\n    : hardDrop(tetromino, playfield, top + 1);\n};\n","const emptyLines = (width, height) =>\n  [...Array(height)].map(() => [...Array(width)].map(() => undefined));\n\nexport const clearLines = (playfield) => {\n  const width = playfield[0].length;\n  const clearedPlayfield = playfield.reduceRight(\n    (acc, row) => (row.every((occupied) => occupied) ? acc : [row].concat(acc)),\n    []\n  );\n  const linesCleared = playfield.length - clearedPlayfield.length;\n  return {\n    playfield: emptyLines(width, linesCleared).concat(clearedPlayfield),\n    linesCleared\n  };\n};\n","//https://tetris.fandom.com/wiki/SRS\nconst _ = undefined;\nconst o = 'O';\nexport const O = {\n  top: 0,\n  left: 4,\n  name: o,\n  rotationPhase: 0,\n  shape: [\n    [o, o],\n    [o, o]\n  ]\n};\nconst i = 'I';\nexport const I = {\n  top: 0,\n  left: 3,\n  name: i,\n  rotationPhase: 0,\n  shape: [\n    [_, _, _, _],\n    [i, i, i, i],\n    [_, _, _, _],\n    [_, _, _, _]\n  ]\n};\nconst s = 'S';\nexport const S = {\n  top: 0,\n  left: 3,\n  name: s,\n  rotationPhase: 0,\n  shape: [\n    [_, s, s],\n    [s, s, _],\n    [_, _, _]\n  ]\n};\nconst z = 'Z';\nexport const Z = {\n  top: 0,\n  left: 3,\n  name: z,\n  rotationPhase: 0,\n  shape: [\n    [z, z, _],\n    [_, z, z],\n    [_, _, _]\n  ]\n};\nconst t = 'T';\nexport const T = {\n  top: 0,\n  left: 3,\n  name: t,\n  rotationPhase: 0,\n  shape: [\n    [_, t, _],\n    [t, t, t],\n    [_, _, _]\n  ]\n};\n\nconst j = 'J';\nexport const J = {\n  top: 0,\n  left: 3,\n  name: j,\n  rotationPhase: 0,\n  shape: [\n    [j, _, _],\n    [j, j, j],\n    [_, _, _]\n  ]\n};\n\nconst l = 'L';\nexport const L = {\n  top: 0,\n  left: 3,\n  name: l,\n  rotationPhase: 0,\n  shape: [\n    [_, _, l],\n    [l, l, l],\n    [_, _, _]\n  ]\n};\n\nexport const lookup = {\n  O, L, J, Z, I, T, S\n};\n","import { blockedOut, landed } from '../../engine/checks';\nimport {\n  hardDrop,\n  lock,\n  move,\n  rotateLeft,\n  rotateRight\n} from '../../engine/actions';\n\nimport { clearLines } from '../../engine/clearLines';\nimport { directions } from '../../constants/directions';\nimport { lookup } from '../../constants/tetrominos';\nimport { phases } from '../../constants/phases';\n\nconst emptyPlayField = [...Array(22)].map(() =>\n  [...Array(10)].map(() => undefined)\n);\nconst doLock = (state) => {\n  const { tetromino, playfield } = state;\n  const lockResult = lock(tetromino, playfield);\n  return lockResult.locked\n    ? {\n        ...state,\n        tetromino: undefined,\n        ghostPiece: undefined,\n        playfield: lockResult.playfield,\n        sfx: 'locked',\n        phase: phases.clearing\n      }\n    : {\n        ...state,\n        phase: phases.descending\n      };\n};\n\nconst visitors = {\n  tick: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, directions.down);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      phase: landed(updatedTetromino, playfield) ? phases.locking : state.phase\n    };\n  },\n  move: (state, action) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = move(tetromino, playfield, action.payload);\n    return state.phase === phases.locking && action.payload === directions.down\n      ? doLock(state)\n      : {\n          ...state,\n          tetromino: updatedTetromino,\n          ghostPiece: hardDrop(updatedTetromino, playfield),\n          phase: landed(updatedTetromino, playfield)\n            ? phases.locking\n            : phases.descending\n        };\n  },\n  lock: doLock,\n  clear: (state) => {\n    const { playfield } = state;\n    const clearResult = clearLines(playfield);\n    const lines = state.lines + clearResult.linesCleared;\n    return {\n      ...state,\n      playfield: clearResult.playfield,\n      lines,\n      sfx:\n        clearResult.linesCleared > 0\n          ? 'clear' + clearResult.linesCleared\n          : undefined,\n      interval: Math.max(100, 1000 - Math.floor(lines / 10) * 100),\n      phase: phases.spawning\n    };\n  },\n  rotateRight: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateRight(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: rotateRight(tetromino, playfield),\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  rotateLeft: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = rotateLeft(tetromino, playfield);\n    return {\n      ...state,\n      tetromino: updatedTetromino,\n      ghostPiece: hardDrop(updatedTetromino, playfield)\n    };\n  },\n  spawn: (state, action) => {\n    const { queue, playfield } = state;\n    const newTetromino = queue[0];\n    const newQueue = queue.slice(1).concat(action.payload || []);\n    const isAlive =\n      !landed(newTetromino, playfield) && !blockedOut(newTetromino, playfield);\n    return {\n      ...state,\n      tetromino: newTetromino,\n      ghostPiece: hardDrop(newTetromino, playfield),\n      phase: isAlive ? phases.descending : phases.gameOver,\n      sfx: isAlive ? 'spawn' : 'gameOver',\n      queue: newQueue,\n      holdLock: false,\n      alive: isAlive\n    };\n  },\n  hardDrop: (state) => {\n    const { tetromino, playfield } = state;\n    const updatedTetromino = hardDrop(tetromino, playfield);\n    return doLock({\n      ...state,\n      tetromino: updatedTetromino,\n      phase: phases.locking\n    });\n  },\n  start: (state, action) => ({\n    playfield: emptyPlayField,\n    queue: action.payload,\n    phase: phases.starting,\n    tetromino: undefined,\n    alive: true,\n    interval: 1000,\n    lines: 0,\n    countdown: 3,\n    originalPhase: undefined\n  }),\n  countdown: (state) => ({\n    ...state,\n    countdown: Math.max(0, state.countdown - 1)\n  }),\n  pause: (state) => ({\n    ...state,\n    phase: phases.paused,\n    originalPhase: state.phase\n  }),\n  resume: (state) => ({\n    ...state,\n    phase: phases.resuming,\n    countdown: 3\n  }),\n  restore: (state) => ({\n    ...state,\n    phase: state.originalPhase,\n    originalPhase: undefined\n  }),\n  hold: (state) => {\n    const tetromino = state.hold ?? state.queue[0];\n    return state.holdLock\n      ? state\n      : {\n          ...state,\n          hold: lookup[state.tetromino.name],\n          holdLock: true,\n          tetromino,\n          queue: state.hold ? state.queue : state.queue.slice(1),\n          ghostPiece: hardDrop(tetromino, state.playfield)\n        };\n  }\n};\nconst validPhases = {\n  tick: [phases.descending],\n  move: [phases.descending, phases.locking],\n  lock: [phases.locking],\n  clear: [phases.clearing],\n  rotateLeft: [phases.descending, phases.locking],\n  rotateRight: [phases.descending, phases.locking],\n  spawn: [phases.spawning, phases.starting],\n  hardDrop: [phases.descending],\n  start: [phases.pending, phases.gameOver],\n  countdown: [phases.starting, phases.resuming],\n  pause: [phases.descending, phases.locking, phases.clearing, phases.spawning],\n  resume: [phases.paused],\n  restore: [phases.resuming],\n  hold: [phases.descending]\n};\nexport const reducer = (state, action) =>\n  validPhases[action.type]?.includes(state.phase)\n    ? visitors[action.type](state, action)\n    : state;\n\nexport const initialState = {\n  playfield: emptyPlayField,\n  queue: [],\n  phase: phases.pending,\n  tetromino: undefined,\n  alive: false,\n  interval: 1000,\n  lines: 0,\n  countdown: 0\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport { initialState, reducer } from './reducer';\nimport { useEffect, useReducer } from 'react';\n\nimport { directions } from '../../constants/directions';\nimport { phases } from '../../constants/phases';\n\nconst dispatchWith = (action) => (dispatch) => dispatch(action);\nconst autoRepeat = (action, repeatInterval, cancelKey) => (dispatch, e) => {\n  if (e.repeat) {\n    return;\n  }\n  dispatch(action);\n  const delay = 100 - repeatInterval;\n  const timeout = setTimeout(() => {\n    const interval = setInterval(() => {\n      dispatch(action);\n    }, repeatInterval);\n    const cancelInterval = (e) => {\n      if (e.key === cancelKey) {\n        clearInterval(interval);\n        document.body.removeEventListener('keyup', cancelInterval);\n      }\n    };\n    document.body.addEventListener('keyup', cancelInterval);\n  }, delay);\n  const cancelTimeout = (e) => {\n    if (e.key === cancelKey) {\n      clearTimeout(timeout);\n      document.body.removeEventListener('keyup', cancelTimeout);\n    }\n  };\n  document.body.addEventListener('keyup', cancelTimeout);\n};\nconst keyActionMappings = {\n  ArrowLeft: autoRepeat(\n    { type: 'move', payload: directions.left },\n    50,\n    'ArrowLeft'\n  ),\n  ArrowRight: autoRepeat(\n    { type: 'move', payload: directions.right },\n    50,\n    'ArrowRight'\n  ),\n  ArrowDown: autoRepeat(\n    { type: 'move', payload: directions.down },\n    33,\n    'ArrowDown'\n  ),\n  ArrowUp: dispatchWith({ type: 'rotateRight' }),\n  x: dispatchWith({ type: 'rotateRight' }),\n  ' ': dispatchWith({ type: 'hardDrop' }),\n  Escape: dispatchWith({ type: 'pause' }),\n  F1: dispatchWith({ type: 'pause' }),\n  z: dispatchWith({ type: 'rotateLeft' }),\n  Control: dispatchWith({ type: 'rotateLeft' }),\n  c: dispatchWith({ type: 'hold' })\n};\nexport const UseGameReducer = (audio, randomizer) => () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const shouldTick =\n    state.alive &&\n    state.tetromino !== undefined &&\n    state.phase !== phases.paused;\n  useEffect(() => {\n    const handle = shouldTick\n      ? setInterval(() => dispatch({ type: 'tick' }), state.interval)\n      : 0;\n    return () => clearInterval(handle);\n  }, [shouldTick, state.interval]);\n\n  useEffect(() => {\n    if (state.sfx) {\n      audio[state.sfx]();\n    }\n  }, [state.sfx]);\n  useEffect(() => {\n    const phaseVisitors = {\n      [phases.spawning]: () =>\n        dispatch({\n          type: 'spawn',\n          payload: state.queue.length <= 3 ? randomizer() : []\n        }),\n      [phases.locking]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'lock'\n            }),\n          500\n        ),\n      [phases.clearing]: () =>\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'clear'\n            }),\n          500\n        ),\n      [phases.starting]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'spawn',\n            payload: randomizer()\n          });\n        }\n      },\n      [phases.resuming]: () => {\n        if (state.countdown > 0) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: 'countdown'\n              }),\n            1000\n          );\n        } else {\n          dispatch({\n            type: 'restore'\n          });\n        }\n      }\n    };\n    phaseVisitors[state.phase]?.();\n  }, [state.phase, state.queue.length, state.countdown]);\n  useEffect(() => {\n    const onKeydown = (e) => {\n      if (keyActionMappings[e.key]) {\n        keyActionMappings[e.key](dispatch, e);\n        e.preventDefault();\n      }\n    };\n    if (state.alive) {\n      document.body.addEventListener('keydown', onKeydown);\n    }\n    return () => document.body.removeEventListener('keydown', onKeydown);\n  }, [state.alive]);\n\n  const start = () => dispatch({ type: 'start', payload: randomizer() });\n  const resume = () => dispatch({ type: 'resume' });\n  return {\n    state,\n    start,\n    resume\n  };\n};\n","import GameFactory from './Game';\r\nimport { Player } from '../../sfx/player';\r\nimport { UseGameReducer } from './useGameReducer';\r\nimport { randomizer } from '../../engine/randomizer';\r\n\r\nconst audio = Player(AudioContext);\r\nconst useGameReducer = UseGameReducer(audio, randomizer);\r\nconst Game = GameFactory(useGameReducer);\r\nexport default Game;\r\n","import { I, J, L, O, S, T, Z } from '../constants/tetrominos';\n\nconst shuffle = (xs) => {\n  const result = xs.slice(0);\n  let i = result.slice(0).length - 1;\n  while (i >= 0) {\n    const randomIndex = Math.floor(Math.random() * (i + 1));\n    const temp = result[i];\n    result[i] = result[randomIndex];\n    result[randomIndex] = temp;\n    i = i - 1;\n  }\n  return result;\n};\nexport const randomizer = () => shuffle([I, O, T, S, Z, J, L]);\n","import './App.scss';\n\nimport Game from './components/Game/index';\nimport React from 'react';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}